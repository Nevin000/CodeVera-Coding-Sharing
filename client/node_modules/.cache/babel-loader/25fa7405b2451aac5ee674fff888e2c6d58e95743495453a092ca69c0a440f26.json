{"ast":null,"code":"// Redux/Notification/Reducer.js\nimport { GET_NOTIFICATIONS, GET_UNREAD_NOTIFICATIONS, MARK_NOTIFICATION_AS_READ, DELETE_NOTIFICATION, CREATE_NOTIFICATION } from \"./ActionType\";\nconst initialState = {\n  notifications: [],\n  unreadNotifications: []\n};\nexport const notificationReducer = function () {\n  let store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  if (type === GET_NOTIFICATIONS) {\n    return {\n      ...store,\n      notifications: payload\n    };\n  } else if (type === GET_UNREAD_NOTIFICATIONS) {\n    return {\n      ...store,\n      unreadNotifications: payload\n    };\n  } else if (type === MARK_NOTIFICATION_AS_READ) {\n    const updatedNotifications = store.notifications.map(notification => notification.id === payload.id ? payload : notification);\n    const updatedUnreadNotifications = store.unreadNotifications.filter(notification => notification.id !== payload.id);\n    return {\n      ...store,\n      notifications: updatedNotifications,\n      unreadNotifications: updatedUnreadNotifications\n    };\n  } else if (type === DELETE_NOTIFICATION) {\n    const updatedNotifications = store.notifications.filter(notification => notification.id !== payload);\n    const updatedUnreadNotifications = store.unreadNotifications.filter(notification => notification.id !== payload);\n    return {\n      ...store,\n      notifications: updatedNotifications,\n      unreadNotifications: updatedUnreadNotifications\n    };\n  } else if (type === CREATE_NOTIFICATION) {\n    return {\n      ...store,\n      notifications: [payload, ...store.notifications],\n      unreadNotifications: [payload, ...store.unreadNotifications]\n    };\n  }\n  return store;\n};","map":{"version":3,"names":["GET_NOTIFICATIONS","GET_UNREAD_NOTIFICATIONS","MARK_NOTIFICATION_AS_READ","DELETE_NOTIFICATION","CREATE_NOTIFICATION","initialState","notifications","unreadNotifications","notificationReducer","store","arguments","length","undefined","type","payload","updatedNotifications","map","notification","id","updatedUnreadNotifications","filter"],"sources":["E:/PAF/poject/client/src/Redux/Notification/Reducer.js"],"sourcesContent":["// Redux/Notification/Reducer.js\nimport {\n    GET_NOTIFICATIONS,\n    GET_UNREAD_NOTIFICATIONS,\n    MARK_NOTIFICATION_AS_READ,\n    DELETE_NOTIFICATION,\n    CREATE_NOTIFICATION\n} from \"./ActionType\";\n\nconst initialState = {\n    notifications: [],\n    unreadNotifications: [],\n};\n\nexport const notificationReducer = (store = initialState, { type, payload }) => {\n    if (type === GET_NOTIFICATIONS) {\n        return { ...store, notifications: payload };\n    } else if (type === GET_UNREAD_NOTIFICATIONS) {\n        return { ...store, unreadNotifications: payload };\n    } else if (type === MARK_NOTIFICATION_AS_READ) {\n        const updatedNotifications = store.notifications.map((notification) =>\n            notification.id === payload.id ? payload : notification\n        );\n        const updatedUnreadNotifications = store.unreadNotifications.filter(\n            (notification) => notification.id !== payload.id\n        );\n        return {\n            ...store,\n            notifications: updatedNotifications,\n            unreadNotifications: updatedUnreadNotifications,\n        };\n    } else if (type === DELETE_NOTIFICATION) {\n        const updatedNotifications = store.notifications.filter(\n            (notification) => notification.id !== payload\n        );\n        const updatedUnreadNotifications = store.unreadNotifications.filter(\n            (notification) => notification.id !== payload\n        );\n        return {\n            ...store,\n            notifications: updatedNotifications,\n            unreadNotifications: updatedUnreadNotifications,\n        };\n    } else if (type === CREATE_NOTIFICATION) {\n        return {\n            ...store,\n            notifications: [payload, ...store.notifications],\n            unreadNotifications: [payload, ...store.unreadNotifications],\n        };\n    }\n    return store;\n};"],"mappings":"AAAA;AACA,SACIA,iBAAiB,EACjBC,wBAAwB,EACxBC,yBAAyB,EACzBC,mBAAmB,EACnBC,mBAAmB,QAChB,cAAc;AAErB,MAAMC,YAAY,GAAG;EACjBC,aAAa,EAAE,EAAE;EACjBC,mBAAmB,EAAE;AACzB,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG,SAAAA,CAAA,EAA6C;EAAA,IAA5CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAE;IAAEQ,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACvE,IAAIC,IAAI,KAAKb,iBAAiB,EAAE;IAC5B,OAAO;MAAE,GAAGS,KAAK;MAAEH,aAAa,EAAEQ;IAAQ,CAAC;EAC/C,CAAC,MAAM,IAAID,IAAI,KAAKZ,wBAAwB,EAAE;IAC1C,OAAO;MAAE,GAAGQ,KAAK;MAAEF,mBAAmB,EAAEO;IAAQ,CAAC;EACrD,CAAC,MAAM,IAAID,IAAI,KAAKX,yBAAyB,EAAE;IAC3C,MAAMa,oBAAoB,GAAGN,KAAK,CAACH,aAAa,CAACU,GAAG,CAAEC,YAAY,IAC9DA,YAAY,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,GAAGJ,OAAO,GAAGG,YAAY,CAC1D;IACD,MAAME,0BAA0B,GAAGV,KAAK,CAACF,mBAAmB,CAACa,MAAM,CAC9DH,YAAY,IAAKA,YAAY,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CACnD;IACD,OAAO;MACH,GAAGT,KAAK;MACRH,aAAa,EAAES,oBAAoB;MACnCR,mBAAmB,EAAEY;IACzB,CAAC;EACL,CAAC,MAAM,IAAIN,IAAI,KAAKV,mBAAmB,EAAE;IACrC,MAAMY,oBAAoB,GAAGN,KAAK,CAACH,aAAa,CAACc,MAAM,CAClDH,YAAY,IAAKA,YAAY,CAACC,EAAE,KAAKJ,OAAO,CAChD;IACD,MAAMK,0BAA0B,GAAGV,KAAK,CAACF,mBAAmB,CAACa,MAAM,CAC9DH,YAAY,IAAKA,YAAY,CAACC,EAAE,KAAKJ,OAAO,CAChD;IACD,OAAO;MACH,GAAGL,KAAK;MACRH,aAAa,EAAES,oBAAoB;MACnCR,mBAAmB,EAAEY;IACzB,CAAC;EACL,CAAC,MAAM,IAAIN,IAAI,KAAKT,mBAAmB,EAAE;IACrC,OAAO;MACH,GAAGK,KAAK;MACRH,aAAa,EAAE,CAACQ,OAAO,EAAE,GAAGL,KAAK,CAACH,aAAa,CAAC;MAChDC,mBAAmB,EAAE,CAACO,OAAO,EAAE,GAAGL,KAAK,CAACF,mBAAmB;IAC/D,CAAC;EACL;EACA,OAAOE,KAAK;AAChB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}