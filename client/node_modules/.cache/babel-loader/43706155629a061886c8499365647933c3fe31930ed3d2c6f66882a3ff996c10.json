{"ast":null,"code":"import { BASE_URL } from \"../../Config/api\";\nimport { CREATE_REEL_FAILURE, CREATE_REEL_REQUEST, CREATE_REEL_SUCCESS, DELETE_REEL_FAILURE, DELETE_REEL_REQUEST, DELETE_REEL_SUCCESS, GET_ALL_REELS_FAILURE, GET_ALL_REELS_REQUEST, GET_ALL_REELS_SUCCESS } from \"./ActionType\";\nexport const createReel = data => async dispatch => {\n  dispatch({\n    type: CREATE_REEL_REQUEST\n  });\n  try {\n    const response = await fetch(`${BASE_URL}/api/reels/create`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + data.jwt\n      },\n      body: JSON.stringify(data.reelData)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Failed to create reel\");\n    }\n    const responseData = await response.json();\n    console.log(\"created reel \", responseData);\n    dispatch({\n      type: CREATE_REEL_SUCCESS,\n      payload: responseData\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_REEL_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const deleteReel = data => async dispatch => {\n  dispatch({\n    type: DELETE_REEL_REQUEST\n  });\n  try {\n    const response = await fetch(`${BASE_URL}/api/reels/delete/${data.reelId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + data.jwt\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Failed to delete reel\");\n    }\n    const responseData = await response.json();\n    dispatch({\n      type: DELETE_REEL_SUCCESS,\n      payload: responseData\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_REEL_FAILURE,\n      payload: error.message\n    });\n  }\n};\nexport const getAllReels = jwt => async dispatch => {\n  console.log(\"enter in get all reels ----------- \");\n  dispatch({\n    type: GET_ALL_REELS_REQUEST\n  });\n  try {\n    const response = await fetch(`${BASE_URL}/api/reels/`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + jwt\n      }\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.message || \"Failed to get reels\");\n    }\n    const responseData = await response.json();\n    console.log(\"all reels - \", responseData);\n    dispatch({\n      type: GET_ALL_REELS_SUCCESS,\n      payload: responseData\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_ALL_REELS_FAILURE,\n      payload: error.message\n    });\n  }\n};","map":{"version":3,"names":["BASE_URL","CREATE_REEL_FAILURE","CREATE_REEL_REQUEST","CREATE_REEL_SUCCESS","DELETE_REEL_FAILURE","DELETE_REEL_REQUEST","DELETE_REEL_SUCCESS","GET_ALL_REELS_FAILURE","GET_ALL_REELS_REQUEST","GET_ALL_REELS_SUCCESS","createReel","data","dispatch","type","response","fetch","method","headers","Authorization","jwt","body","JSON","stringify","reelData","ok","errorData","json","Error","message","responseData","console","log","payload","error","deleteReel","reelId","getAllReels"],"sources":["D:/SLIIT IT/Year 3 Semester 2/PAF/poject/client/src/Redux/Reel/Action.js"],"sourcesContent":["import { BASE_URL } from \"../../Config/api\";\r\nimport {\r\n  CREATE_REEL_FAILURE,\r\n  CREATE_REEL_REQUEST,\r\n  CREATE_REEL_SUCCESS,\r\n  DELETE_REEL_FAILURE,\r\n  DELETE_REEL_REQUEST,\r\n  DELETE_REEL_SUCCESS,\r\n  GET_ALL_REELS_FAILURE,\r\n  GET_ALL_REELS_REQUEST,\r\n  GET_ALL_REELS_SUCCESS,\r\n} from \"./ActionType\";\r\n\r\nexport const createReel = (data) => async (dispatch) => {\r\n  dispatch({ type: CREATE_REEL_REQUEST });\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/reels/create`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + data.jwt,\r\n      },\r\n      body: JSON.stringify(data.reelData),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || \"Failed to create reel\");\r\n    }\r\n    const responseData = await response.json();\r\n    console.log(\"created reel \", responseData);\r\n    dispatch({\r\n      type: CREATE_REEL_SUCCESS,\r\n      payload: responseData,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CREATE_REEL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteReel = (data) => async (dispatch) => {\r\n  dispatch({ type: DELETE_REEL_REQUEST });\r\n  try {\r\n    const response = await fetch(\r\n      `${BASE_URL}/api/reels/delete/${data.reelId}`,\r\n      {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + data.jwt,\r\n        },\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || \"Failed to delete reel\");\r\n    }\r\n    const responseData = await response.json();\r\n    dispatch({\r\n      type: DELETE_REEL_SUCCESS,\r\n      payload: responseData,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: DELETE_REEL_FAILURE,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getAllReels = (jwt) => async (dispatch) => {\r\n  console.log(\"enter in get all reels ----------- \")\r\n  dispatch({ type: GET_ALL_REELS_REQUEST });\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/api/reels/`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + jwt,\r\n      },\r\n    });\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.message || \"Failed to get reels\");\r\n    }\r\n    const responseData = await response.json();\r\n\r\n    console.log(\"all reels - \",responseData)\r\n    dispatch({\r\n      type: GET_ALL_REELS_SUCCESS,\r\n      payload: responseData,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ALL_REELS_FAILURE,\r\n\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}