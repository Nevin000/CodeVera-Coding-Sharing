[{"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\index.js":"1","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\App.js":"2","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\reportWebVitals.js":"3","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Store\\Store.js":"4","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\Router\\Routers.jsx":"5","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Auth\\Reducer.js":"6","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Comment\\Reducer.js":"7","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Post\\Reducer.js":"8","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Notification\\Reducer.js":"9","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Story\\Reducer.js":"10","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningPlan\\Reducer.js":"11","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningProgress\\Reducer.js":"12","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Reel\\Reducer.js":"13","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\User\\Reducer.js":"14","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\User\\Action.js":"15","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Auth\\ActionType.js":"16","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Post\\ActionType.js":"17","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Notification\\ActionType.js":"18","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Comment\\ActionType.js":"19","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningProgress\\ActionType.js":"20","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Story\\ActionType.js":"21","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Demo\\Demo.js":"22","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Reel\\ActionType.js":"23","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningPlan\\ActionType.js":"24","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\EditProfile\\EditProfilePage.jsx":"25","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\User\\ActionType.js":"26","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\Auth\\OAuthSuccess.jsx":"27","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\Profile\\Profile.jsx":"28","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\Auth\\Auth.jsx":"29","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\Story\\Story.jsx":"30","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\HomePage\\HomePage.jsx":"31","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Story\\CreateStory.jsx":"32","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Notification\\Notification.jsx":"33","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\LearningPlan\\LearningPlan.jsx":"34","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\AboutUs\\AboutUs.jsx":"35","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\LearningProgress\\LearningProgress.jsx":"36","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Story\\Action.js":"37","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Config\\api.js":"38","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Config\\Logic.js":"39","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Reel\\Action.js":"40","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\ProfilePageCard\\ProfilePostsPart.jsx":"41","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Create\\CreateReel.jsx":"42","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\EditProfileComponent\\EditProfileForm.jsx":"43","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Register\\Signin.jsx":"44","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\SearchComponent\\SearchComponent.jsx":"45","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Register\\Singup.jsx":"46","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Config\\UploadToCloudinary.js":"47","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Post\\Action.js":"48","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Story\\StoryViewer\\StoryViewer.jsx":"49","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\HomeRight\\HomeRight.jsx":"50","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningPlan\\Action.js":"51","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Notification\\Action.js":"52","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Post\\Create\\CreatePostModal.jsx":"53","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Story\\StoryCircle\\StoryCircle.jsx":"54","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Post\\PostCard\\PostCard.jsx":"55","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningProgress\\Action.js":"56","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\ProfilePageCard\\UserDetailCard.jsx":"57","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Config\\Debounce.js":"58","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Auth\\Action.js":"59","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Config\\UploadVideoToCloudnary.js":"60","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Comment\\Action.js":"61","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\EditProfileComponent\\ChangeProfilePhotoModal.jsx":"62","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\SearchComponent\\SearchUserCard.jsx":"63","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\ProfilePageCard\\ReqUserPostCard.jsx":"64","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\HomeRight\\SuggestionsUserCard.jsx":"65","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Demo\\StoryProgress.jsx":"66","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Comment\\CommentModal.jsx":"67","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Spinner\\Spinner.jsx":"68","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Post\\Create\\EditPostModal.jsx":"69","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Comment\\CommentCard.jsx":"70","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Comment\\EditCommentModal.jsx":"71","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Navbar\\Navbar.jsx":"72"},{"size":698,"mtime":1745990971220,"results":"73","hashOfConfig":"74"},{"size":213,"mtime":1745990970504,"results":"75","hashOfConfig":"74"},{"size":375,"mtime":1745990971221,"results":"76","hashOfConfig":"74"},{"size":985,"mtime":1745990971143,"results":"77","hashOfConfig":"74"},{"size":3094,"mtime":1746495036497,"results":"78","hashOfConfig":"74"},{"size":358,"mtime":1745990971072,"results":"79","hashOfConfig":"74"},{"size":939,"mtime":1745990971074,"results":"80","hashOfConfig":"74"},{"size":1215,"mtime":1745990971080,"results":"81","hashOfConfig":"74"},{"size":1879,"mtime":1745990971078,"results":"82","hashOfConfig":"74"},{"size":409,"mtime":1745990971155,"results":"83","hashOfConfig":"74"},{"size":4132,"mtime":1745990971075,"results":"84","hashOfConfig":"74"},{"size":864,"mtime":1745990971076,"results":"85","hashOfConfig":"74"},{"size":1596,"mtime":1745990971142,"results":"86","hashOfConfig":"74"},{"size":811,"mtime":1745990971156,"results":"87","hashOfConfig":"74"},{"size":4227,"mtime":1745990971155,"results":"88","hashOfConfig":"74"},{"size":64,"mtime":1745990971071,"results":"89","hashOfConfig":"74"},{"size":468,"mtime":1745990971079,"results":"90","hashOfConfig":"74"},{"size":437,"mtime":1745990971077,"results":"91","hashOfConfig":"74"},{"size":325,"mtime":1745990971073,"results":"92","hashOfConfig":"74"},{"size":256,"mtime":1745990971076,"results":"93","hashOfConfig":"74"},{"size":167,"mtime":1745990971154,"results":"94","hashOfConfig":"74"},{"size":2,"mtime":1745990970509,"results":"95","hashOfConfig":"74"},{"size":545,"mtime":1745990971142,"results":"96","hashOfConfig":"74"},{"size":676,"mtime":1745990971075,"results":"97","hashOfConfig":"74"},{"size":282,"mtime":1745990970685,"results":"98","hashOfConfig":"74"},{"size":339,"mtime":1745990971156,"results":"99","hashOfConfig":"74"},{"size":1307,"mtime":1745990970684,"results":"100","hashOfConfig":"74"},{"size":1345,"mtime":1746557580919,"results":"101","hashOfConfig":"74"},{"size":711,"mtime":1745990970684,"results":"102","hashOfConfig":"74"},{"size":951,"mtime":1746588428337,"results":"103","hashOfConfig":"74"},{"size":3941,"mtime":1746428135347,"results":"104","hashOfConfig":"74"},{"size":5418,"mtime":1746589878735,"results":"105","hashOfConfig":"74"},{"size":6204,"mtime":1746571338002,"results":"106","hashOfConfig":"74"},{"size":26378,"mtime":1747795057746,"results":"107","hashOfConfig":"74"},{"size":15006,"mtime":1746462433611,"results":"108","hashOfConfig":"74"},{"size":5264,"mtime":1745990970569,"results":"109","hashOfConfig":"74"},{"size":1928,"mtime":1745990971152,"results":"110","hashOfConfig":"74"},{"size":45,"mtime":1745990970680,"results":"111","hashOfConfig":"74"},{"size":3131,"mtime":1745990970678,"results":"112","hashOfConfig":"74"},{"size":2766,"mtime":1745990971141,"results":"113","hashOfConfig":"74"},{"size":7539,"mtime":1746586495468,"results":"114","hashOfConfig":"74"},{"size":6741,"mtime":1745990970507,"results":"115","hashOfConfig":"74"},{"size":6909,"mtime":1745990970512,"results":"116","hashOfConfig":"74"},{"size":5046,"mtime":1745990970578,"results":"117","hashOfConfig":"74"},{"size":1459,"mtime":1746492499948,"results":"118","hashOfConfig":"74"},{"size":5824,"mtime":1745990970579,"results":"119","hashOfConfig":"74"},{"size":707,"mtime":1745990970679,"results":"120","hashOfConfig":"74"},{"size":7402,"mtime":1745990971079,"results":"121","hashOfConfig":"74"},{"size":2115,"mtime":1745990970676,"results":"122","hashOfConfig":"74"},{"size":3560,"mtime":1746604708643,"results":"123","hashOfConfig":"74"},{"size":8286,"mtime":1745990971074,"results":"124","hashOfConfig":"74"},{"size":4070,"mtime":1745990971077,"results":"125","hashOfConfig":"74"},{"size":9385,"mtime":1745990970572,"results":"126","hashOfConfig":"74"},{"size":658,"mtime":1745990970675,"results":"127","hashOfConfig":"74"},{"size":11782,"mtime":1746494905488,"results":"128","hashOfConfig":"74"},{"size":1574,"mtime":1745990971076,"results":"129","hashOfConfig":"74"},{"size":3878,"mtime":1746602636475,"results":"130","hashOfConfig":"74"},{"size":227,"mtime":1745990970677,"results":"131","hashOfConfig":"74"},{"size":1140,"mtime":1745990971070,"results":"132","hashOfConfig":"74"},{"size":618,"mtime":1745990970680,"results":"133","hashOfConfig":"74"},{"size":3502,"mtime":1745990971073,"results":"134","hashOfConfig":"74"},{"size":1425,"mtime":1745990970511,"results":"135","hashOfConfig":"74"},{"size":855,"mtime":1746492301783,"results":"136","hashOfConfig":"74"},{"size":2739,"mtime":1746569774396,"results":"137","hashOfConfig":"74"},{"size":612,"mtime":1745990970513,"results":"138","hashOfConfig":"74"},{"size":985,"mtime":1745990970510,"results":"139","hashOfConfig":"74"},{"size":9191,"mtime":1746613625419,"results":"140","hashOfConfig":"74"},{"size":330,"mtime":1745990970672,"results":"141","hashOfConfig":"74"},{"size":7041,"mtime":1745990970572,"results":"142","hashOfConfig":"74"},{"size":5755,"mtime":1746495238944,"results":"143","hashOfConfig":"74"},{"size":1506,"mtime":1745935682591,"results":"144","hashOfConfig":"74"},{"size":6368,"mtime":1746570842043,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wn1tn7",{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","suppressedMessages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","suppressedMessages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","suppressedMessages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","suppressedMessages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"163"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"237","messages":"238","suppressedMessages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","suppressedMessages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"163"},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247"},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"163"},{"filePath":"258","messages":"259","suppressedMessages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"163"},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289"},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296"},{"filePath":"297","messages":"298","suppressedMessages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","suppressedMessages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"303","messages":"304","suppressedMessages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306"},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"310","messages":"311","suppressedMessages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"313","messages":"314","suppressedMessages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","suppressedMessages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319"},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323"},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"163"},{"filePath":"328","messages":"329","suppressedMessages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"331","messages":"332","suppressedMessages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334"},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350"},{"filePath":"351","messages":"352","suppressedMessages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"354","messages":"355","suppressedMessages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"357","messages":"358","suppressedMessages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","suppressedMessages":"362","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","suppressedMessages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"366","messages":"367","suppressedMessages":"368","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","suppressedMessages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372"},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"163"},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"163"},"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\index.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\App.js",["384"],[],"import { Routes } from \"react-router\";\r\nimport Routers from \"./Pages/Router/Routers\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"\">\r\n      \r\n<Routers/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\reportWebVitals.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Store\\Store.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\Router\\Routers.jsx",["385","386"],[],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Routes, useLocation } from \"react-router-dom\";\r\n\r\nimport StoryPage from \"../../Components/Demo/Demo\";\r\nimport Navbar from \"../../Components/Navbar/Navbar\";\r\nimport { getUserProfileAction } from \"../../Redux/User/Action\";\r\nimport Auth from \"../Auth/Auth\";\r\nimport EditProfilePage from \"../EditProfile/EditProfilePage\";\r\nimport HomePage from \"../HomePage/HomePage\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport Story from \"../Story/Story\";\r\nimport CreateStory from \"../../Components/Story/CreateStory\";\r\nimport Notification from \"../../Components/Notification/Notification\";\r\nimport LearningPlan from \"../../Components/LearningPlan/LearningPlan\";\r\nimport LearningProgress from \"../../Components/LearningProgress/LearningProgress\";\r\nimport AboutUs from \"../AboutUs/AboutUs\";\r\nimport OAuthSuccess from \"../Auth/OAuthSuccess\";\r\nimport SearchComponent from \"../../Components/SearchComponent/SearchComponent\";\r\n\r\nconst Routers = () => {\r\n  const location = useLocation();\r\n  const reqUser = useSelector((store) => store.user.reqUser);\r\n  const token = localStorage.getItem(\"token\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserProfileAction(token));\r\n  }, [token]);\r\n  return (\r\n    <div>\r\n      {}\r\n\r\n      {location.pathname !== \"/login\" && location.pathname !== \"/signup\" && (\r\n        <div className=\"flex\">\r\n          {location.pathname !== \"/reels\" && (\r\n            <div className=\"w-[20%] min-w-[240px] h-screen flex flex-col border-r\">\r\n              <Navbar />\r\n              <div className=\"flex-1 overflow-y-auto\">\r\n                <SearchComponent />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"w-full pt-16 px-4\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<HomePage />} />\r\n              <Route path=\"/about\" element={<AboutUs />} />\r\n              <Route path=\"/p/:postId\" element={<HomePage />} />\r\n              <Route path=\"/p/:postId/edit\" element={<HomePage />} />\r\n              <Route path=\"/:username\" element={<Profile />} />\r\n              <Route path=\"/demo\" element={<StoryPage />} />\r\n              <Route path=\"/story/:userId\" element={<Story />} />\r\n              <Route path=\"/account/edit\" element={<EditProfilePage />} />\r\n              <Route path=\"/notifications\" element={<Notification />} />\r\n              <Route path=\"/create-story\" element={<CreateStory />} />\r\n              <Route path=\"/learning_plan\" element={<LearningPlan />} />\r\n              <Route path=\"/learning-progress\" element={<LearningProgress />} />\r\n              <Route path=\"/oauth-success\" element={<OAuthSuccess />} />\r\n            </Routes>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {(location.pathname === \"/login\" || location.pathname === \"/signup\") && (\r\n        <Routes>\r\n          <Route path=\"/login\" element={<Auth />} />\r\n          <Route path=\"/signup\" element={<Auth />} />\r\n        </Routes>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routers;\r\n",[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Auth\\Reducer.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Comment\\Reducer.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Post\\Reducer.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Notification\\Reducer.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Story\\Reducer.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningPlan\\Reducer.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningProgress\\Reducer.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Reel\\Reducer.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\User\\Reducer.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\User\\Action.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Auth\\ActionType.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Post\\ActionType.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Notification\\ActionType.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Comment\\ActionType.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningProgress\\ActionType.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Story\\ActionType.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Demo\\Demo.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Reel\\ActionType.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningPlan\\ActionType.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\EditProfile\\EditProfilePage.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\User\\ActionType.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\Auth\\OAuthSuccess.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\Profile\\Profile.jsx",["387"],[],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ProfilePostsPart from \"../../Components/ProfilePageCard/ProfilePostsPart\";\r\nimport UserDetailCard from \"../../Components/ProfilePageCard/UserDetailCard\";\r\nimport { isFollowing, isReqUser } from \"../../Config/Logic\";\r\nimport {\r\n  findByUsernameAction,\r\n  getUserProfileAction,\r\n} from \"../../Redux/User/Action\";\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n  const { username } = useParams();\r\n  const { user } = useSelector((store) => store);\r\n\r\n  const isRequser = isReqUser(user.reqUser?.id, user.findByUsername?.id);\r\n  const isFollowed = isFollowing(user.reqUser, user.findByUsername);\r\n\r\n  useEffect(() => {\r\n    const data = { token, username };\r\n    dispatch(getUserProfileAction(token));\r\n    dispatch(findByUsernameAction(data));\r\n  }, [username, user.follower, user.following]);\r\n\r\n  return (\r\n    <div className=\"px-20\">\r\n      <UserDetailCard\r\n        user={isRequser ? user.reqUser : user.findByUsername}\r\n        isFollowing={isFollowed}\r\n        isRequser={isRequser}\r\n      />\r\n      <ProfilePostsPart user={isRequser ? user.reqUser : user.findByUsername} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\Auth\\Auth.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\Story\\Story.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\HomePage\\HomePage.jsx",["388","389","390"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport HomeRight from \"../../Components/HomeRight/HomeRight\";\r\nimport PostCard from \"../../Components/Post/PostCard/PostCard\";\r\nimport StoryCircle from \"../../Components/Story/StoryCircle/StoryCircle\";\r\nimport { hasStory, suggetions, timeDifference } from \"../../Config/Logic\";\r\nimport { findUserPost } from \"../../Redux/Post/Action\";\r\nimport {\r\n  findByUserIdsAction,\r\n  getUserProfileAction,\r\n} from \"../../Redux/User/Action\";\r\nimport \"./HomePage.css\";\r\n\r\nconst HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const [userIds, setUserIds] = useState([]);\r\n  const token = localStorage.getItem(\"token\");\r\n  const reqUser = useSelector((store) => store.user.reqUser);\r\n  const { user, post } = useSelector((store) => store);\r\n  const [suggestedUser, setSuggestedUser] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserProfileAction(token));\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    if (reqUser) {\r\n      const newIds = reqUser?.following?.map((user) => user.id);\r\n      setUserIds([reqUser?.id, ...newIds]);\r\n      setSuggestedUser(suggetions(reqUser));\r\n    }\r\n  }, [reqUser]);\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      userIds: [userIds].join(\",\"),\r\n      jwt: token,\r\n    };\r\n\r\n    if (userIds.length > 0) {\r\n      dispatch(findUserPost(data));\r\n      dispatch(findByUserIdsAction(data));\r\n    }\r\n  }, [userIds, post.createdPost, post.deletedPost, post.updatedPost]);\r\n\r\n  const storyUsers = hasStory(user.userByIds);\r\n\r\n  return (\r\n    <div className=\"homepage-container\">\r\n      <div className=\"mt-10 flex w-full justify-center\">\r\n        {/* Main Content */}\r\n        <div className=\"flex flex-col w-full max-w-2xl px-4 md:px-10 items-center\">\r\n          {/* Stories Section */}\r\n          {storyUsers.length > 0 && (\r\n            <div className=\"flex space-x-4 p-4 bg-white rounded-lg shadow-sm border border-gray-100 w-full mb-6 overflow-x-auto\">\r\n              {storyUsers.map((item, index) => (\r\n                <StoryCircle\r\n                  key={index}\r\n                  image={\r\n                    item?.image ||\r\n                    \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n                  }\r\n                  username={item?.username}\r\n                  userId={item?.id}\r\n                />\r\n              ))}\r\n            </div>\r\n          )}\r\n\r\n          {/* Posts Section */}\r\n          <div className=\"w-full space-y-6\">\r\n            {post.userPost?.length > 0 ? (\r\n              post.userPost.map((item) => (\r\n                <PostCard\r\n                  key={item.id}\r\n                  userProfileImage={\r\n                    item.user.userImage ||\r\n                    \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n                  }\r\n                  username={item?.user?.username}\r\n                  location={item?.location}\r\n                  postImage={item?.image}\r\n                  createdAt={timeDifference(item?.createdAt)}\r\n                  postId={item?.id}\r\n                  post={item}\r\n                  likes={item.likedByUsers || []}\r\n                  comments={item.comments || []}\r\n                  caption={item.caption}\r\n                />\r\n              ))\r\n            ) : (\r\n              <div className=\"text-center py-10\">\r\n                <p className=\"text-gray-500\">\r\n                  No posts to show. Follow more people to see their posts.\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Right Navbar */}\r\n        <div className=\"hidden lg:block w-80 pr-4 pl-6\">\r\n          <HomeRight suggestedUser={suggestedUser} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Story\\CreateStory.jsx",["391","392"],[],"import React, { useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createStory } from \"../../Redux/Story/Action\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { uploadToCloudinary } from \"../../Config/UploadToCloudinary\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Input,\r\n  Button,\r\n  Spinner,\r\n  useToast,\r\n  Image,\r\n  Icon,\r\n  Textarea,\r\n  AspectRatio,\r\n} from \"@chakra-ui/react\";\r\nimport { FiUpload, FiImage, FiCheck } from \"react-icons/fi\";\r\n\r\nconst CreateStory = () => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [previewImage, setPreviewImage] = useState(null);\r\n  const [caption, setCaption] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"token\");\r\n  const toast = useToast();\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleFilePick = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setSelectedFile(file);\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        setPreviewImage(fileReader.result);\r\n      };\r\n      fileReader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      setLoading(true);\r\n\r\n      if (!selectedFile) {\r\n        toast({\r\n          title: \"Please select an image\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const imageUrl = await uploadToCloudinary(selectedFile);\r\n\r\n      if (!imageUrl) {\r\n        toast({\r\n          title: \"Upload failed\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      const storyData = {\r\n        image: imageUrl,\r\n        captions: caption,\r\n      };\r\n\r\n      await dispatch(createStory({ story: storyData, jwt: token }));\r\n\r\n      toast({\r\n        title: \"Story created!\",\r\n        status: \"success\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n\r\n      setLoading(false);\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.error(\"Error creating story:\", error);\r\n      toast({\r\n        title: \"Error\",\r\n        status: \"error\",\r\n        duration: 3000,\r\n        isClosable: true,\r\n      });\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      minH=\"100vh\"\r\n      bg=\"gray.50\"\r\n      p={4}\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Box bg=\"white\" p={8} borderRadius=\"xl\" boxShadow=\"md\" w=\"100%\" maxW=\"md\">\r\n        <Text\r\n          fontSize=\"2xl\"\r\n          fontWeight=\"semibold\"\r\n          mb={6}\r\n          textAlign=\"center\"\r\n          color=\"gray.700\"\r\n        >\r\n          Create New Story\r\n        </Text>\r\n\r\n        <Box as=\"form\" onSubmit={handleSubmit}>\r\n          <Box\r\n            border=\"2px dashed\"\r\n            borderColor=\"gray.200\"\r\n            borderRadius=\"lg\"\r\n            p={6}\r\n            textAlign=\"center\"\r\n            cursor=\"pointer\"\r\n            mb={6}\r\n            bg=\"gray.50\"\r\n            _hover={{ borderColor: \"blue.200\" }}\r\n            transition=\"border-color 0.2s\"\r\n            onClick={() => fileInputRef.current.click()}\r\n          >\r\n            {previewImage ? (\r\n              <AspectRatio ratio={9 / 16} w=\"100%\">\r\n                <Image\r\n                  src={previewImage}\r\n                  alt=\"Preview\"\r\n                  borderRadius=\"md\"\r\n                  objectFit=\"cover\"\r\n                />\r\n              </AspectRatio>\r\n            ) : (\r\n              <Flex\r\n                direction=\"column\"\r\n                align=\"center\"\r\n                justify=\"center\"\r\n                h=\"200px\"\r\n              >\r\n                <Icon as={FiImage} boxSize={8} color=\"gray.400\" mb={4} />\r\n                <Text color=\"gray.500\" mb={1}>\r\n                  Click to upload image\r\n                </Text>\r\n                <Text fontSize=\"sm\" color=\"gray.400\">\r\n                  (JPEG, PNG, WEBP)\r\n                </Text>\r\n              </Flex>\r\n            )}\r\n            <Input\r\n              type=\"file\"\r\n              ref={fileInputRef}\r\n              accept=\"image/*\"\r\n              onChange={handleFilePick}\r\n              display=\"none\"\r\n            />\r\n          </Box>\r\n\r\n          {previewImage && (\r\n            <Box mb={6}>\r\n              <Textarea\r\n                value={caption}\r\n                onChange={(e) => setCaption(e.target.value)}\r\n                placeholder=\"Add a caption...\"\r\n                size=\"md\"\r\n                bg=\"white\"\r\n                borderColor=\"gray.200\"\r\n                _hover={{ borderColor: \"gray.300\" }}\r\n                focusBorderColor=\"blue.400\"\r\n                rows={3}\r\n                resize=\"vertical\"\r\n              />\r\n            </Box>\r\n          )}\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            colorScheme=\"blue\"\r\n            width=\"full\"\r\n            isLoading={loading}\r\n            loadingText=\"Publishing...\"\r\n            rightIcon={<FiCheck />}\r\n            isDisabled={!previewImage}\r\n            size=\"lg\"\r\n            mt={2}\r\n          >\r\n            Publish Story\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateStory;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Notification\\Notification.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\LearningPlan\\LearningPlan.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Pages\\AboutUs\\AboutUs.jsx",["393","394"],[],"import React from \"react\";\r\n\r\nconst AboutUs = () => {\r\n  return (\r\n    <div className=\"min-h-screen bg-white\">\r\n      {/* Hero with Abstract Background */}\r\n      <div className=\"relative bg-gray-900 overflow-hidden\">\r\n        <div className=\"absolute inset-0 opacity-30\">\r\n          <div className=\"absolute inset-0 bg-gradient-to-br from-blue-500 to-purple-600 mix-blend-multiply\"></div>\r\n        </div>\r\n\r\n        <div className=\"relative max-w-7xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:px-8\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-4xl font-extrabold tracking-tight text-white sm:text-5xl lg:text-6xl\">\r\n              We're <span className=\"text-emerald-400\">CodeVera</span>\r\n            </h1>\r\n            <p className=\"mt-6 max-w-lg mx-auto text-xl text-gray-200\">\r\n              Where developers unite to solve, share, and grow together\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Platform Definition */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12\">\r\n        <div className=\"lg:text-center\">\r\n          <h2 className=\"text-base font-semibold tracking-wide text-emerald-500 uppercase\">\r\n            Collaborative Coding\r\n          </h2>\r\n          <p className=\"mt-2 text-3xl font-extrabold text-gray-900 sm:text-4xl\">\r\n            A better way to solve coding challenges\r\n          </p>\r\n          <p className=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\r\n            CodeVera combines real-time collaboration with community wisdom to\r\n            help you overcome any coding obstacle.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Value Propositions */}\r\n        <div className=\"mt-16\">\r\n          <div className=\"grid grid-cols-1 gap-8 lg:grid-cols-3\">\r\n            {[\r\n              {\r\n                name: \"Collective Intelligence\",\r\n                description:\r\n                  \"Tap into the knowledge of thousands of developers worldwide\",\r\n                icon: (\r\n                  <svg\r\n                    className=\"h-8 w-8 text-emerald-500\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\"\r\n                    />\r\n                  </svg>\r\n                ),\r\n              },\r\n              {\r\n                name: \"Instant Help\",\r\n                description:\r\n                  \"Get solutions to your coding problems in real-time\",\r\n                icon: (\r\n                  <svg\r\n                    className=\"h-8 w-8 text-emerald-500\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n                    />\r\n                  </svg>\r\n                ),\r\n              },\r\n              {\r\n                name: \"Skill Growth\",\r\n                description:\r\n                  \"Learn from solving real-world problems with peers\",\r\n                icon: (\r\n                  <svg\r\n                    className=\"h-8 w-8 text-emerald-500\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"\r\n                    />\r\n                  </svg>\r\n                ),\r\n              },\r\n            ].map((feature) => (\r\n              <div key={feature.name} className=\"pt-6\">\r\n                <div className=\"flow-root bg-gray-50 rounded-lg px-6 pb-8 h-full\">\r\n                  <div className=\"-mt-6\">\r\n                    <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-white shadow-md\">\r\n                      {feature.icon}\r\n                    </div>\r\n                    <h3 className=\"mt-8 text-lg font-medium text-gray-900 tracking-tight\">\r\n                      {feature.name}\r\n                    </h3>\r\n                    <p className=\"mt-5 text-base text-gray-500\">\r\n                      {feature.description}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* How It Works */}\r\n      <div className=\"bg-gray-50\">\r\n        <div className=\"max-w-7xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:px-8\">\r\n          <div className=\"lg:mx-auto lg:max-w-2xl lg:text-center\">\r\n            <h2 className=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\r\n              How CodeVera Works\r\n            </h2>\r\n            <p className=\"mt-4 text-lg text-gray-600\">\r\n              Simple steps to get unstuck and keep learning\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"mt-20\">\r\n            <div className=\"relative\">\r\n              {/* Vertical line */}\r\n              <div className=\"hidden lg:block absolute top-0 bottom-0 left-1/2 w-0.5 bg-gray-200 transform -translate-x-1/2\"></div>\r\n\r\n              <div className=\"relative space-y-12 lg:space-y-0 lg:grid lg:grid-cols-2 lg:gap-x-8\">\r\n                {[\r\n                  {\r\n                    name: \"Post Your Challenge\",\r\n                    description:\r\n                      \"Describe your coding problem with relevant details and code snippets\",\r\n                    icon: (\r\n                      <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-emerald-500 text-white\">\r\n                        <svg\r\n                          className=\"h-6 w-6\"\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"Get Community Help\",\r\n                    description:\r\n                      \"Other developers review your problem and propose solutions\",\r\n                    icon: (\r\n                      <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-emerald-500 text-white\">\r\n                        <svg\r\n                          className=\"h-6 w-6\"\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"Collaborate in Real-Time\",\r\n                    description:\r\n                      \"Work together on solutions using our shared coding environment\",\r\n                    icon: (\r\n                      <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-emerald-500 text-white\">\r\n                        <svg\r\n                          className=\"h-6 w-6\"\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                  {\r\n                    name: \"Build Your Reputation\",\r\n                    description:\r\n                      \"Earn recognition by helping others solve their challenges\",\r\n                    icon: (\r\n                      <div className=\"flex items-center justify-center h-12 w-12 rounded-md bg-emerald-500 text-white\">\r\n                        <svg\r\n                          className=\"h-6 w-6\"\r\n                          fill=\"none\"\r\n                          viewBox=\"0 0 24 24\"\r\n                          stroke=\"currentColor\"\r\n                        >\r\n                          <path\r\n                            strokeLinecap=\"round\"\r\n                            strokeLinejoin=\"round\"\r\n                            strokeWidth={2}\r\n                            d=\"M5 3v4M3 5h4M6 17v4m-2-2h4m5-16l2.286 6.857L21 12l-5.714 2.143L13 21l-2.286-6.857L5 12l5.714-2.143L13 3z\"\r\n                          />\r\n                        </svg>\r\n                      </div>\r\n                    ),\r\n                  },\r\n                ].map((step, index) => (\r\n                  <div\r\n                    key={step.name}\r\n                    className={`relative lg:flex lg:items-start ${\r\n                      index % 2 === 0\r\n                        ? \"lg:text-right lg:mr-8\"\r\n                        : \"lg:text-left lg:ml-8 lg:mt-20\"\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      className={`lg:w-1/2 lg:px-4 ${\r\n                        index % 2 === 0 ? \"lg:order-1\" : \"\"\r\n                      }`}\r\n                    >\r\n                      <h3 className=\"text-lg font-medium text-gray-900\">\r\n                        {step.name}\r\n                      </h3>\r\n                      <p className=\"mt-2 text-base text-gray-500\">\r\n                        {step.description}\r\n                      </p>\r\n                    </div>\r\n                    <div\r\n                      className={`mt-8 flex items-center justify-center h-12 w-12 rounded-md bg-white shadow-md lg:mt-0 lg:absolute lg:left-1/2 lg:transform lg:-translate-x-1/2 ${\r\n                        index % 2 === 0 ? \"lg:order-2\" : \"\"\r\n                      }`}\r\n                    >\r\n                      {step.icon}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats */}\r\n      <div className=\"bg-white py-16 sm:py-24\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"lg:text-center\">\r\n            <h2 className=\"text-base font-semibold tracking-wide text-emerald-500 uppercase\">\r\n              Trusted by developers\r\n            </h2>\r\n            <p className=\"mt-2 text-3xl font-extrabold text-gray-900 sm:text-4xl\">\r\n              CodeVera in numbers\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"mt-10\">\r\n            <div className=\"grid grid-cols-1 gap-8 sm:grid-cols-2 lg:grid-cols-4\">\r\n              {[\r\n                { name: \"Active Developers\", value: \"250K+\" },\r\n                { name: \"Problems Solved\", value: \"1.2M+\" },\r\n                { name: \"Solutions Shared\", value: \"3.8M+\" },\r\n                { name: \"Response Time\", value: \"<15 min\" },\r\n              ].map((stat) => (\r\n                <div key={stat.name} className=\"pt-6\">\r\n                  <div className=\"flow-root bg-gray-50 rounded-lg px-6 pb-8\">\r\n                    <div className=\"-mt-6\">\r\n                      <div>\r\n                        <span className=\"inline-flex items-center justify-center p-3 bg-emerald-500 rounded-md shadow-lg\">\r\n                          <svg\r\n                            className=\"h-6 w-6 text-white\"\r\n                            fill=\"none\"\r\n                            viewBox=\"0 0 24 24\"\r\n                            stroke=\"currentColor\"\r\n                          >\r\n                            <path\r\n                              strokeLinecap=\"round\"\r\n                              strokeLinejoin=\"round\"\r\n                              strokeWidth={2}\r\n                              d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"\r\n                            />\r\n                          </svg>\r\n                        </span>\r\n                      </div>\r\n                      <h3 className=\"mt-8 text-lg font-medium text-gray-900 tracking-tight\">\r\n                        {stat.name}\r\n                      </h3>\r\n                      <p className=\"mt-2 text-base text-gray-500\">\r\n                        {stat.value}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* CTA */}\r\n      <div className=\"bg-gray-900\">\r\n        <div className=\"max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\r\n          <h2 className=\"text-3xl font-extrabold tracking-tight text-white sm:text-4xl\">\r\n            <span className=\"block\">Ready to dive in?</span>\r\n            <span className=\"block text-emerald-400\">\r\n              Start solving with CodeVera today.\r\n            </span>\r\n          </h2>\r\n          <div className=\"mt-8 flex lg:mt-0 lg:flex-shrink-0\">\r\n            <div className=\"inline-flex rounded-md shadow\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-emerald-500 hover:bg-emerald-600\"\r\n              >\r\n                Get started\r\n              </a>\r\n            </div>\r\n            <div className=\"ml-3 inline-flex rounded-md shadow\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-emerald-500 bg-white hover:bg-gray-50\"\r\n              >\r\n                Learn more\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AboutUs;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\LearningProgress\\LearningProgress.jsx",["395"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getProgressUpdates,\r\n  createProgressUpdate,\r\n  updateProgressUpdate,\r\n  deleteProgressUpdate\r\n} from \"../../Redux/LearningProgress/Action\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  List,\r\n  message,\r\n  Select\r\n} from \"antd\";\r\nimport {\r\n  PlusOutlined,\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  FileTextOutlined,\r\n  ToolOutlined,\r\n  RocketOutlined\r\n} from \"@ant-design/icons\";\r\nimport \"./LearningProgress.css\"; // 👈 Make sure this CSS file is created\r\n\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nconst LearningProgress = () => {\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n\r\n  const { updates } = useSelector((store) => store.learningProgress);\r\n\r\n  const [form] = Form.useForm();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [editing, setEditing] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getProgressUpdates(token));\r\n  }, [dispatch]);\r\n\r\n  const handleSubmit = (values) => {\r\n    if (editing) {\r\n      dispatch(updateProgressUpdate(token, editing.id, values));\r\n      message.success(\"Update edited successfully!\");\r\n    } else {\r\n      dispatch(createProgressUpdate(token, values));\r\n      message.success(\"New update added!\");\r\n    }\r\n    form.resetFields();\r\n    setIsModalOpen(false);\r\n    setEditing(null);\r\n  };\r\n\r\n  // LearningProgress component manages user learning progress updates\r\n\r\n  const handleTemplateChange = (value) => {\r\n    if (value === \"tutorial\") {\r\n      form.setFieldsValue({\r\n        title: \"📚 Completed a Tutorial\",\r\n        content: \"Finished learning [topic] tutorial.\"\r\n      });\r\n    } else if (value === \"skill\") {\r\n      form.setFieldsValue({\r\n        title: \"🛠️ Learned a New Skill\",\r\n        content: \"I learned how to [skill].\"\r\n      });\r\n    } else if (value === \"project\") {\r\n      form.setFieldsValue({\r\n        title: \"🚀 Built a Project\",\r\n        content: \"I developed a project using [technology].\"\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <div className=\"flex justify-between items-center mb-4\">\r\n        <h2 className=\"text-xl font-semibold\">📈 Learning Progress Updates</h2>\r\n        <Button\r\n          type=\"primary\"\r\n          icon={<PlusOutlined />}\r\n          onClick={() => setIsModalOpen(true)}\r\n        >\r\n          Add Update\r\n        </Button>\r\n      </div>\r\n\r\n      <List\r\n        dataSource={updates}\r\n        renderItem={(item) => (\r\n          <List.Item\r\n            key={item.id}\r\n            actions={[\r\n              <Button\r\n                icon={<EditOutlined />}\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setEditing(item);\r\n                  form.setFieldsValue(item);\r\n                  setIsModalOpen(true);\r\n                }}\r\n              />,\r\n              <Button\r\n                icon={<DeleteOutlined />}\r\n                size=\"small\"\r\n                danger\r\n                onClick={() => {\r\n                  dispatch(deleteProgressUpdate(token, item.id));\r\n                  message.success(\"Update deleted!\");\r\n                }}\r\n              />\r\n            ]}\r\n          >\r\n            <List.Item.Meta\r\n              title={item.title}\r\n              description={item.content}\r\n            />\r\n          </List.Item>\r\n        )}\r\n      />\r\n\r\n      <Modal\r\n        open={isModalOpen}\r\n        onCancel={() => {\r\n          setIsModalOpen(false);\r\n          setEditing(null);\r\n          form.resetFields();\r\n        }}\r\n        onOk={() => form.submit()}\r\n        title={editing ? \"Edit Update ✏️\" : \"Add Progress Update 🚀\"}\r\n      >\r\n        <Form form={form} onFinish={handleSubmit} layout=\"vertical\">\r\n          {!editing && (\r\n            <Form.Item label=\"Choose a Template\">\r\n              <Select\r\n                placeholder=\"Select a template\"\r\n                onChange={handleTemplateChange}\r\n                optionLabelProp=\"label\"\r\n              >\r\n                <Option value=\"tutorial\" label=\"📚 Completed Tutorial\">\r\n                  <FileTextOutlined /> 📚 Completed Tutorial\r\n                </Option>\r\n                <Option value=\"skill\" label=\"🛠️ New Skill Learned\">\r\n                  <ToolOutlined /> 🛠️ New Skill Learned\r\n                </Option>\r\n                <Option value=\"project\" label=\"🚀 Built a Project\">\r\n                  <RocketOutlined /> 🚀 Built a Project\r\n                </Option>\r\n              </Select>\r\n            </Form.Item>\r\n          )}\r\n\r\n          <Form.Item\r\n            name=\"title\"\r\n            label=\"Title\"\r\n            rules={[{ required: true, message: \"Please enter a title\" }]}\r\n          >\r\n            <Input placeholder=\"e.g., Completed React Bootcamp\" />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"content\"\r\n            label=\"Details\"\r\n            rules={[{ required: true, message: \"Please enter details\" }]}\r\n          >\r\n            <Input.TextArea\r\n              rows={4}\r\n              placeholder=\"What did you learn or complete?\"\r\n            />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LearningProgress;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Story\\Action.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Config\\api.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Config\\Logic.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Reel\\Action.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\ProfilePageCard\\ProfilePostsPart.jsx",["396","397"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { BsBookmark, BsBookmarkFill } from \"react-icons/bs\";\r\nimport { AiOutlineTable, AiOutlineUser } from \"react-icons/ai\";\r\nimport { BiUser } from \"react-icons/bi\";\r\nimport ReqUserPostCard from \"./ReqUserPostCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { reqUserPostAction } from \"../../Redux/Post/Action\";\r\nimport {\r\n  Box,\r\n  Flex,\r\n  Text,\r\n  Stack,\r\n  Divider,\r\n  Avatar,\r\n  Icon,\r\n  Badge,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  FaGlobe,\r\n  FaPhone,\r\n  FaEnvelope,\r\n  FaVenusMars,\r\n  FaLock,\r\n} from \"react-icons/fa\";\r\n\r\nconst ProfilePostsPart = ({ user }) => {\r\n  const [activeTab, setActiveTab] = useState(\"POST\");\r\n  const { post } = useSelector((store) => store);\r\n  const token = localStorage.getItem(\"token\");\r\n  const dispatch = useDispatch();\r\n\r\n  const tabs = [\r\n    {\r\n      tab: \"POST\",\r\n      icon: <AiOutlineTable className=\"text-xl\" />,\r\n      activeIcon: <AiOutlineTable className=\"text-xl text-black\" />,\r\n    },\r\n    {\r\n      tab: \"SAVED\",\r\n      icon: <BsBookmark className=\"text-xl\" />,\r\n      activeIcon: <BsBookmarkFill className=\"text-xl text-black\" />,\r\n    },\r\n    {\r\n      tab: \"ABOUT\",\r\n      icon: <AiOutlineUser className=\"text-xl\" />,\r\n      activeIcon: <AiOutlineUser className=\"text-xl text-black\" />,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      jwt: token,\r\n      userId: user?.id,\r\n    };\r\n    dispatch(reqUserPostAction(data));\r\n  }, [user, post.createdPost]);\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      {/* Tab Navigation */}\r\n      <div className=\"flex justify-center border-t border-gray-200\">\r\n        <div className=\"flex space-x-16\">\r\n          {tabs.map((item) => (\r\n            <button\r\n              key={item.tab}\r\n              onClick={() => setActiveTab(item.tab)}\r\n              className={`flex flex-col items-center py-4 px-1 relative ${\r\n                item.tab === activeTab ? \"text-black\" : \"text-gray-500\"\r\n              }`}\r\n            >\r\n              <div className=\"flex items-center space-x-2\">\r\n                {item.tab === activeTab ? item.activeIcon : item.icon}\r\n                <span className=\"text-base font-medium\">{item.tab}</span>\r\n              </div>\r\n              {item.tab === activeTab && (\r\n                <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-black\"></div>\r\n              )}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content Area */}\r\n      {activeTab === \"POST\" && (\r\n        <div className=\"grid grid-cols-3 gap-1 mt-1\">\r\n          {post.reqUserPost?.length > 0 ? (\r\n            post.reqUserPost?.map((item, index) => (\r\n              <ReqUserPostCard post={item} key={index} />\r\n            ))\r\n          ) : (\r\n            <div className=\"col-span-3 flex flex-col items-center justify-center py-16\">\r\n              <div className=\"w-20 h-20 rounded-full border-2 border-black flex items-center justify-center mb-4\">\r\n                <AiOutlineTable className=\"text-3xl\" />\r\n              </div>\r\n              <h2 className=\"text-3xl font-light mb-2\">No Posts Yet</h2>\r\n              <p className=\"text-sm text-gray-500 max-w-md text-center\">\r\n                When you share photos and videos, they'll appear on your\r\n                profile.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === \"SAVED\" && (\r\n        <div className=\"grid grid-cols-3 gap-1 mt-1\">\r\n          {user?.savedPost?.length > 0 ? (\r\n            user?.savedPost?.map((item, index) => (\r\n              <ReqUserPostCard post={item} key={index} />\r\n            ))\r\n          ) : (\r\n            <div className=\"col-span-3 flex flex-col items-center justify-center py-16\">\r\n              <div className=\"w-20 h-20 rounded-full border-2 border-black flex items-center justify-center mb-4\">\r\n                <BsBookmark className=\"text-3xl\" />\r\n              </div>\r\n              <h2 className=\"text-3xl font-light mb-2\">No Saved Posts</h2>\r\n              <p className=\"text-sm text-gray-500 max-w-md text-center\">\r\n                Save photos and videos that you want to see again.\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {activeTab === \"ABOUT\" && (\r\n        <Box bg=\"white\" p={6} borderRadius=\"md\" boxShadow=\"sm\" className=\"mt-4\">\r\n          <Stack spacing={6}>\r\n            {/* Basic Information Section */}\r\n            <Box>\r\n              <Text fontSize=\"xl\" fontWeight=\"bold\" mb={4}>\r\n                Basic Information\r\n              </Text>\r\n              <Stack spacing={4}>\r\n                {user?.name && (\r\n                  <Flex align=\"center\">\r\n                    <Avatar\r\n                      size=\"sm\"\r\n                      name={user.name}\r\n                      src={user.image}\r\n                      mr={3}\r\n                    />\r\n                    <Text fontWeight=\"medium\">{user.name}</Text>\r\n                  </Flex>\r\n                )}\r\n\r\n                {user?.username && (\r\n                  <Flex align=\"center\">\r\n                    <Text fontWeight=\"medium\" mr={2}>\r\n                      Username:\r\n                    </Text>\r\n                    <Text>@{user.username}</Text>\r\n                  </Flex>\r\n                )}\r\n\r\n                {user?.bio && (\r\n                  <Box>\r\n                    <Text fontWeight=\"medium\" mb={1}>\r\n                      Bio:\r\n                    </Text>\r\n                    <Text>{user.bio}</Text>\r\n                  </Box>\r\n                )}\r\n\r\n                {user?.website && (\r\n                  <Flex align=\"center\">\r\n                    <Icon as={FaGlobe} mr={2} />\r\n                    <Text\r\n                      as=\"a\"\r\n                      href={user.website}\r\n                      target=\"_blank\"\r\n                      color=\"blue.500\"\r\n                    >\r\n                      {user.website}\r\n                    </Text>\r\n                  </Flex>\r\n                )}\r\n              </Stack>\r\n            </Box>\r\n\r\n            <Divider />\r\n\r\n            {/* Personal Information Section */}\r\n            <Box>\r\n              <Text fontSize=\"xl\" fontWeight=\"bold\" mb={4}>\r\n                Personal Information\r\n              </Text>\r\n              <Stack spacing={4}>\r\n                {user?.email && (\r\n                  <Flex align=\"center\">\r\n                    <Icon as={FaEnvelope} mr={2} />\r\n                    <Text>{user.email}</Text>\r\n                  </Flex>\r\n                )}\r\n\r\n                {user?.mobile && (\r\n                  <Flex align=\"center\">\r\n                    <Icon as={FaPhone} mr={2} />\r\n                    <Text>{user.mobile}</Text>\r\n                  </Flex>\r\n                )}\r\n\r\n                {user?.gender && (\r\n                  <Flex align=\"center\">\r\n                    <Icon as={FaVenusMars} mr={2} />\r\n                    <Text>{user.gender}</Text>\r\n                  </Flex>\r\n                )}\r\n\r\n                {user?.private && (\r\n                  <Flex align=\"center\">\r\n                    <Icon as={FaLock} mr={2} />\r\n                    <Text>Private Account</Text>\r\n                    {user.private && (\r\n                      <Badge ml={2} colorScheme=\"purple\">\r\n                        Private\r\n                      </Badge>\r\n                    )}\r\n                  </Flex>\r\n                )}\r\n              </Stack>\r\n            </Box>\r\n          </Stack>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePostsPart;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Create\\CreateReel.jsx",["398","399","400","401","402"],[],"import {\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/modal\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FaPhotoVideo } from \"react-icons/fa\";\r\nimport { GoLocation } from \"react-icons/go\";\r\nimport { GrEmoji } from \"react-icons/gr\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uploadToCloudinary } from \"../../Config/UploadToCloudinary\";\r\nimport SpinnerCard from \"../Spinner/Spinner\";\r\nimport { uploadMediaToCloudinary } from \"../../Config/UploadVideoToCloudnary\";\r\nimport { createReel } from \"../../Redux/Reel/Action\";\r\n\r\nconst CreateReelModal = ({ onOpen, isOpen, onClose }) => {\r\n  const finalRef = React.useRef(null);\r\n  const [file, setFile] = useState(null);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const [isImageUploaded, setIsImageUploaded] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n  const { user } = useSelector((store) => store);\r\n  const [videoUrl, setVideoUrl] = useState();\r\n  const [postData, setPostData] = useState({\r\n    video: \"\",\r\n    caption: \"\",\r\n    location: \"\",\r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPostData((prevValues) => ({ ...prevValues, [name]: value }));\r\n  };\r\n\r\n\r\n\r\n  function handleDragLeave(event) {\r\n    setIsDragOver(false);\r\n  }\r\n\r\n  const handleOnChange = async (e) => {\r\n\r\n    const file = e.target.files[0];\r\n    if (\r\n      file &&\r\n      (file.type.startsWith(\"image/\") || file.type.startsWith(\"video/\"))\r\n    ) {\r\n      setFile(file);\r\n      const reader = new FileReader();\r\n      reader.readAsDataURL(file);\r\n\r\n      reader.onloadend = function () {\r\n        setVideoUrl(reader.result);\r\n      };\r\n\r\n      setIsImageUploaded(\"uploading\");\r\n      const url = await uploadMediaToCloudinary(file);\r\n      setPostData((prevValues) => ({ ...prevValues, video: url }));\r\n      setIsImageUploaded(\"uploaded\");\r\n    } else {\r\n      setFile(null);\r\n      alert(\"Please select an image/video file.\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const data = {\r\n      jwt: token,\r\n      reelData: postData,\r\n    };\r\n    if (token && postData.video) {\r\n      dispatch(createReel(data));\r\n      handleClose();\r\n    }\r\n\r\n  };\r\n  function handleClose() {\r\n    onClose();\r\n    setFile(null);\r\n    setIsDragOver(false);\r\n    setPostData({ video: \"\", caption: \"\", location: \"\" });\r\n    setIsImageUploaded(\"\");\r\n  }\r\n  return (\r\n    <div>\r\n      <Modal\r\n        size={\"4xl\"}\r\n        className=\"\"\r\n        finalFocusRef={finalRef}\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent fontSize={\"sm\"}>\r\n          <div className=\"flex justify-between py-1 px-10 items-center\">\r\n            <p>Create New Post</p>\r\n            <Button\r\n              onClick={handleSubmit}\r\n              className=\"inline-flex\"\r\n              colorScheme=\"blue\"\r\n              size={\"sm\"}\r\n              variant=\"ghost\"\r\n            >\r\n              Share\r\n            </Button>\r\n          </div>\r\n\r\n          <hr className=\"hrLine\" />\r\n\r\n          <ModalBody>\r\n            <div className=\"modalBodyBox flex h-[70vh] justify-between\">\r\n              <div className=\"w-[50%] flex flex-col justify-center items-center\">\r\n                {isImageUploaded === \"\" && (\r\n                  <div\r\n                    onDragLeave={handleDragLeave}\r\n                    className={`drag-drop h-full`}\r\n                  >\r\n                    <div className=\"flex justify-center flex-col items-center\">\r\n                      <FaPhotoVideo\r\n                        className={`text-3xl ${\r\n                          isDragOver ? \"text-blue-800\" : \"\"\r\n                        }`}\r\n                      />\r\n                      <p>Drag photos or videos here </p>\r\n                    </div>\r\n\r\n                    <label for=\"file-upload\" className=\"custom-file-upload\">\r\n                      Select from computer\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"file-upload\"\r\n                      accept=\"image/*, video/*\"\r\n                      multiple\r\n                      onChange={(e) => handleOnChange(e)}\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {isImageUploaded === \"uploading\" && <SpinnerCard />}\r\n                {/* video */}\r\n                {postData.video && (\r\n                  <video\r\n                    width=\"60%\"\r\n                    height=\"\"\r\n                    controls\r\n                    className=\"object-contain\"\r\n                    // style={{ objectFit: \"contain\" }}\r\n                    \r\n                  >\r\n                    <source src={videoUrl} type=\"video/mp4\" />\r\n                  </video>\r\n                )}\r\n              </div>\r\n              <div className=\"w-[1px] border h-full\"></div>\r\n              <div className=\"w-[50%]\">\r\n                <div className=\"flex items-center px-2\">\r\n                  <img\r\n                    className=\"w-7 h-7 rounded-full\"\r\n                    src={\r\n                      user?.reqUser?.image ||\r\n                      \"https://cdn.pixabay.com/photo/2023/02/28/03/42/ibex-7819817_640.jpg\"\r\n                    }\r\n                    alt=\"\"\r\n                  />{\" \"}\r\n                  <p className=\"font-semibold ml-4\">\r\n                    {user?.reqUser?.username}\r\n                  </p>\r\n                </div>\r\n                <div className=\"px-2\">\r\n                  <textarea\r\n                    className=\"captionInput\"\r\n                    placeholder=\"Write a description...\"\r\n                    name=\"caption\"\r\n                    rows=\"8\"\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-between px-2\">\r\n                  <GrEmoji />\r\n                  <p className=\"opacity-70\">{postData.caption?.length}/2,200</p>\r\n                </div>\r\n                <hr />\r\n                <div className=\"p-2 flex justify-between items-center\">\r\n                  <input\r\n                    className=\"locationInput\"\r\n                    type=\"text\"\r\n                    placeholder=\"Add Location\"\r\n                    name=\"location\"\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <GoLocation />\r\n                </div>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateReelModal;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\EditProfileComponent\\EditProfileForm.jsx",["403","404","405"],[],"import {\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Input,\r\n  Stack,\r\n  Textarea,\r\n  useDisclosure,\r\n  Box,\r\n  Flex,\r\n  Heading,\r\n  Text,\r\n  Avatar,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { useFormik } from \"formik\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  editUserDetailsAction,\r\n  getUserProfileAction,\r\n} from \"../../Redux/User/Action\";\r\nimport ChangeProfilePhotoModal from \"./ChangeProfilePhotoModal\";\r\nimport { uploadToCloudinary } from \"../../Config/UploadToCloudinary\";\r\n\r\nconst EditProfileForm = () => {\r\n  const { user } = useSelector((store) => store);\r\n  const toast = useToast();\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [imageFile, setImageFile] = useState(null);\r\n\r\n  const [initialValues, setInitialValues] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    bio: \"\",\r\n    mobile: \"\",\r\n    gender: \"\",\r\n    website: \"\",\r\n    private: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserProfileAction(token));\r\n  }, [token]);\r\n\r\n  useEffect(() => {\r\n    if (user.reqUser) {\r\n      const newValue = {};\r\n      for (let item in initialValues) {\r\n        if (user.reqUser[item]) {\r\n          newValue[item] = user.reqUser[item];\r\n        }\r\n      }\r\n      formik.setValues(newValue);\r\n    }\r\n  }, [user.reqUser]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: { ...initialValues },\r\n    onSubmit: (values) => {\r\n      const data = {\r\n        jwt: token,\r\n        data: { ...values, id: user.reqUser?.id },\r\n      };\r\n      dispatch(editUserDetailsAction(data));\r\n      toast({\r\n        title: \"Profile Updated\",\r\n        description: \"Your profile has been updated successfully\",\r\n        status: \"success\",\r\n        duration: 5000,\r\n        isClosable: true,\r\n        position: \"top\",\r\n      });\r\n    },\r\n  });\r\n\r\n  async function handleProfileImageChange(event) {\r\n    const selectedFile = event.target.files[0];\r\n    const image = await uploadToCloudinary(selectedFile);\r\n    setImageFile(image);\r\n    const data = {\r\n      jwt: token,\r\n      data: { image, id: user.reqUser?.id },\r\n    };\r\n    dispatch(editUserDetailsAction(data));\r\n    onClose();\r\n  }\r\n\r\n  return (\r\n    <Box maxW=\"xl\" mx=\"auto\" p={6} borderWidth=\"1px\" borderRadius=\"lg\">\r\n      <Flex direction=\"column\" gap={6}>\r\n        {/* Profile Header */}\r\n        <Flex align=\"center\" gap={4}>\r\n          <Avatar\r\n            size=\"xl\"\r\n            src={\r\n              imageFile ||\r\n              user.reqUser?.image ||\r\n              \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n            }\r\n          />\r\n          <Box>\r\n            <Heading size=\"md\">{user.reqUser?.username}</Heading>\r\n            <Button variant=\"link\" colorScheme=\"blue\" onClick={onOpen} mt={1}>\r\n              Change Profile Photo\r\n            </Button>\r\n          </Box>\r\n        </Flex>\r\n\r\n        {/* Edit Form */}\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Stack spacing={6}>\r\n            {/* Basic Information Section */}\r\n            <Box>\r\n              <Heading size=\"sm\" mb={4}>\r\n                Basic Information\r\n              </Heading>\r\n              <Stack spacing={4}>\r\n                <FormControl>\r\n                  <FormLabel>Name</FormLabel>\r\n                  <Input\r\n                    placeholder=\"Your full name\"\r\n                    {...formik.getFieldProps(\"name\")}\r\n                  />\r\n                  <FormHelperText fontSize=\"xs\">\r\n                    Help people discover your account by using the name you're\r\n                    known by.\r\n                  </FormHelperText>\r\n                </FormControl>\r\n\r\n                <FormControl>\r\n                  <FormLabel>Username</FormLabel>\r\n                  <Input\r\n                    placeholder=\"Username\"\r\n                    {...formik.getFieldProps(\"username\")}\r\n                  />\r\n                  <FormHelperText fontSize=\"xs\">\r\n                    You can change your username every 14 days.\r\n                  </FormHelperText>\r\n                </FormControl>\r\n\r\n                <FormControl>\r\n                  <FormLabel>Website</FormLabel>\r\n                  <Input\r\n                    placeholder=\"Your website\"\r\n                    {...formik.getFieldProps(\"website\")}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl>\r\n                  <FormLabel>Bio</FormLabel>\r\n                  <Textarea\r\n                    placeholder=\"Tell us about yourself\"\r\n                    {...formik.getFieldProps(\"bio\")}\r\n                    resize=\"vertical\"\r\n                    minH=\"100px\"\r\n                  />\r\n                </FormControl>\r\n              </Stack>\r\n            </Box>\r\n\r\n            {/* Personal Information Section */}\r\n            <Box pt={4}>\r\n              <Heading size=\"sm\" mb={4}>\r\n                Personal Information\r\n              </Heading>\r\n              <Text fontSize=\"sm\" color=\"gray.600\" mb={4}>\r\n                Provide your personal information (this won't be public).\r\n              </Text>\r\n              <Stack spacing={4}>\r\n                <FormControl>\r\n                  <FormLabel>Email Address</FormLabel>\r\n                  <Input\r\n                    type=\"email\"\r\n                    placeholder=\"Your email\"\r\n                    {...formik.getFieldProps(\"email\")}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl>\r\n                  <FormLabel>Phone Number</FormLabel>\r\n                  <Input\r\n                    type=\"tel\"\r\n                    placeholder=\"Your phone number\"\r\n                    {...formik.getFieldProps(\"mobile\")}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl>\r\n                  <FormLabel>Gender</FormLabel>\r\n                  <Input\r\n                    placeholder=\"Your gender\"\r\n                    {...formik.getFieldProps(\"gender\")}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl>\r\n                  <Checkbox {...formik.getFieldProps(\"private\")}>\r\n                    Private Account\r\n                  </Checkbox>\r\n                </FormControl>\r\n              </Stack>\r\n            </Box>\r\n\r\n            <Button\r\n              colorScheme=\"blue\"\r\n              type=\"submit\"\r\n              mt={4}\r\n              isLoading={formik.isSubmitting}\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </Stack>\r\n        </form>\r\n      </Flex>\r\n\r\n      <ChangeProfilePhotoModal\r\n        handleProfileImageChange={handleProfileImageChange}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onOpen={onOpen}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EditProfileForm;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Register\\Signin.jsx",["406","407"],[],"import {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  Input,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport { Field, Form, Formik } from \"formik\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { signinAction } from \"../../Redux/Auth/Action\";\r\nimport { getUserProfileAction } from \"../../Redux/User/Action\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Password must be at least 8 characters\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nconst Signin = () => {\r\n  const initialValues = { email: \"\", password: \"\" };\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { user, signin } = useSelector((store) => store);\r\n  const toast = useToast();\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  console.log(\"token in signin page \", token);\r\n  console.log(\"reqUser -: \", user);\r\n\r\n  useEffect(() => {\r\n    if (token) dispatch(getUserProfileAction(token || signin));\r\n  }, [signin, token]);\r\n\r\n  useEffect(() => {\r\n    if (user?.reqUser?.username && token) {\r\n      navigate(`/${user.reqUser?.username}`);\r\n      toast({\r\n        title: \"Signin successful\",\r\n        status: \"success\",\r\n        duration: 8000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  }, [user.reqUser]);\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    console.log(values);\r\n    dispatch(signinAction(values));\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\" \">\r\n      <div className=\"border border-slate-300\">\r\n        <Box p={8} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          {/* Brand Name */}\r\n          <Box\r\n            as=\"h1\"\r\n            fontSize={[\"3xl\", \"4xl\", \"5xl\"]}\r\n            fontWeight=\"extrabold\"\r\n            color=\"blue.500\"\r\n            textAlign=\"center\"\r\n            mb={6}\r\n            fontFamily=\"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\r\n          >\r\n            CodeVera\r\n          </Box>\r\n\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={handleSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {(formikProps) => (\r\n              <Form className=\"w-full\">\r\n                <Field name=\"email\">\r\n                  {({ field, form }) => (\r\n                    <FormControl\r\n                      isInvalid={form.errors.email && form.touched.email}\r\n                      mb={4}\r\n                    >\r\n                      <Input\r\n                        className=\"w-full\"\r\n                        {...field}\r\n                        id=\"email\"\r\n                        placeholder=\"Mobile Number Or Email\"\r\n                      />\r\n                      <FormErrorMessage>{form.errors.email}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n\r\n                <Field name=\"password\">\r\n                  {({ field, form }) => (\r\n                    <FormControl\r\n                      isInvalid={form.errors.password && form.touched.password}\r\n                      mb={4}\r\n                    >\r\n                      <Input\r\n                        {...field}\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                      <FormErrorMessage>\r\n                        {form.errors.password}\r\n                      </FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n\r\n                <p className=\"mt-5 text-center text-sm text-gray-600\">\r\n                  By signing in, you agree to our Terms, Privacy Policy and\r\n                  Cookies Policy.\r\n                </p>\r\n\r\n                <Button\r\n                  className=\"w-full\"\r\n                  mt={4}\r\n                  colorScheme=\"blue\"\r\n                  type=\"submit\"\r\n                  isLoading={formikProps.isSubmitting}\r\n                >\r\n                  Sign In\r\n                </Button>\r\n\r\n                <Button\r\n                  as=\"a\"\r\n                  href=\"http://localhost:5454/oauth2/authorization/google\"\r\n                  colorScheme=\"red\"\r\n                  mt={4}\r\n                  width=\"100%\"\r\n                >\r\n                  Sign in with Google\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      </div>\r\n\r\n      <div className=\"w-full border border-slate-300 mt-5\">\r\n        <p className=\"text-center py-2 text-sm\">\r\n          If you don't have an account,{\" \"}\r\n          <span\r\n            onClick={() => navigate(\"/signup\")}\r\n            className=\"ml-1 text-blue-700 cursor-pointer font-medium\"\r\n          >\r\n            Sign Up\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\SearchComponent\\SearchComponent.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Register\\Singup.jsx",["408"],[],"import { Formik, Form, Field } from \"formik\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl,\r\n  FormErrorMessage,\r\n  Input,\r\n  useToast,\r\n} from \"@chakra-ui/react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signupAction } from \"../../Redux/Auth/Action\";\r\nimport { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n  username: Yup.string()\r\n    .min(4, \"Username must be at least 4 characters\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(8, \"Password must be at least 8 characters\")\r\n    .required(\"Required\"),\r\n  name: Yup.string()\r\n    .min(2, \"Name must be at least 2 characters\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nconst Signup = () => {\r\n  const initialValues = { email: \"\", username: \"\", password: \"\", name: \"\" };\r\n  const dispatch = useDispatch();\r\n  const { auth } = useSelector((store) => store);\r\n  const navigate = useNavigate();\r\n  const toast = useToast();\r\n\r\n  const handleSubmit = (values, actions) => {\r\n    dispatch(signupAction(values));\r\n    console.log(\"signup\", values);\r\n    actions.setSubmitting(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.signup?.username) {\r\n      navigate(\"/login\");\r\n      toast({\r\n        title: \"Account created successfully\",\r\n        status: \"success\",\r\n        duration: 8000,\r\n        isClosable: true,\r\n      });\r\n    }\r\n  }, [auth.signup]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"border border-slate-300\">\r\n        <Box p={8} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n          {/* Brand Logo Heading */}\r\n          <Box\r\n            as=\"h1\"\r\n            fontSize={[\"3xl\", \"4xl\", \"5xl\"]}\r\n            fontWeight=\"extrabold\"\r\n            color=\"blue.500\"\r\n            textAlign=\"center\"\r\n            mb={4}\r\n            fontFamily=\"'Segoe UI', Tahoma, Geneva, Verdana, sans-serif\"\r\n          >\r\n            CodeVera\r\n          </Box>\r\n\r\n          <p className=\"font-bold opacity-50 text-lg mb-10 text-center\">\r\n            Experience the delightful learning experience with CodeVera.\r\n          </p>\r\n\r\n          <Formik\r\n            initialValues={initialValues}\r\n            onSubmit={handleSubmit}\r\n            validationSchema={validationSchema}\r\n          >\r\n            {(formikProps) => (\r\n              <Form className=\"w-full\">\r\n                <Field name=\"email\">\r\n                  {({ field, form }) => (\r\n                    <FormControl\r\n                      isInvalid={form.errors.email && form.touched.email}\r\n                      mb={4}\r\n                    >\r\n                      <Input\r\n                        className=\"w-full\"\r\n                        {...field}\r\n                        id=\"email\"\r\n                        placeholder=\"Mobile Number Or Email\"\r\n                      />\r\n                      <FormErrorMessage>{form.errors.email}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n\r\n                <Field name=\"username\">\r\n                  {({ field, form }) => (\r\n                    <FormControl\r\n                      isInvalid={form.errors.username && form.touched.username}\r\n                      mb={4}\r\n                    >\r\n                      <Input {...field} id=\"username\" placeholder=\"Username\" />\r\n                      <FormErrorMessage>\r\n                        {form.errors.username}\r\n                      </FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n\r\n                <Field name=\"name\">\r\n                  {({ field, form }) => (\r\n                    <FormControl\r\n                      isInvalid={form.errors.name && form.touched.name}\r\n                      mb={4}\r\n                    >\r\n                      <Input {...field} id=\"name\" placeholder=\"Full Name\" />\r\n                      <FormErrorMessage>{form.errors.name}</FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n\r\n                <Field name=\"password\">\r\n                  {({ field, form }) => (\r\n                    <FormControl\r\n                      isInvalid={form.errors.password && form.touched.password}\r\n                      mb={4}\r\n                    >\r\n                      <Input\r\n                        {...field}\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                      />\r\n                      <FormErrorMessage>\r\n                        {form.errors.password}\r\n                      </FormErrorMessage>\r\n                    </FormControl>\r\n                  )}\r\n                </Field>\r\n\r\n                <p className=\"mt-5 text-center text-sm text-gray-600\">\r\n                  By signing up, you agree to our Terms, Privacy Policy and\r\n                  Cookies Policy.\r\n                </p>\r\n\r\n                <Button\r\n                  className=\"w-full\"\r\n                  mt={4}\r\n                  colorScheme=\"blue\"\r\n                  type=\"submit\"\r\n                  isLoading={formikProps.isSubmitting}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Box>\r\n      </div>\r\n\r\n      <div className=\"w-full border border-slate-300 mt-5\">\r\n        <p className=\"text-center py-2 text-sm\">\r\n          If you already have an account,\r\n          <span\r\n            onClick={() => navigate(\"/login\")}\r\n            className=\"ml-2 text-blue-700 cursor-pointer font-medium\"\r\n          >\r\n            Sign In\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Config\\UploadToCloudinary.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Post\\Action.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Story\\StoryViewer\\StoryViewer.jsx",["409","410","411"],[],"import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport StoryProgressBar from '../../Demo/StoryProgress';\r\n\r\nconst StoryViewerContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #333;\r\n  \r\n`;\r\n\r\nconst StoryImage = styled.img`\r\n  \r\n  max-height: 90vh;\r\n  object-fit: contain;\r\n`;\r\n\r\nfunction StoryViewer({ stories }) {\r\n  const [currentStoryIndex, setCurrentStoryIndex] = useState(0);\r\n  const [currentUserStoryIndex,setCurrentUserStoryIndex]=useState(0);\r\n\r\n\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  \r\n  const handleNextStory = () => {\r\n    if (currentStoryIndex < stories?.length - 1) {\r\n      setCurrentStoryIndex(currentStoryIndex + 1);\r\n      setActiveIndex(activeIndex+1)\r\n    }\r\n    else if(currentStoryIndex===stories?.length-1){\r\n      setCurrentStoryIndex(0)\r\n      setActiveIndex(0)\r\n    }\r\n  };\r\n\r\n  const handlePrevStory = () => {\r\n    if (currentStoryIndex > 0) {\r\n      setCurrentStoryIndex(currentStoryIndex - 1);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'ArrowRight') {\r\n      handleNextStory();\r\n    } else if (event.key === 'ArrowLeft') {\r\n      handlePrevStory();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      handleNextStory();\r\n      \r\n    }, 2000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [currentStoryIndex]);\r\n\r\n  console.log(\"story ---- \",stories)\r\n\r\n  return (\r\n    <div className='relative w-full'>\r\n       <StoryViewerContainer tabIndex={0} onKeyDown={handleKeyDown}>\r\n      { <StoryImage src={stories?.[currentStoryIndex].image} alt=\"story image\"/>}\r\n   \r\n    </StoryViewerContainer>\r\n    <div className='absolute top-0 flex w-full'>\r\n      {stories.map((story, index) => (\r\n        <StoryProgressBar\r\n          key={index}\r\n          duration={2000}\r\n          index={index}\r\n          activeIndex={activeIndex}\r\n          // setActiveIndex={setActiveIndex}\r\n        />\r\n      ))}\r\n    </div>\r\n    \r\n    </div>\r\n   \r\n  );\r\n}\r\n export default StoryViewer;","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\HomeRight\\HomeRight.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningPlan\\Action.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Notification\\Action.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Post\\Create\\CreatePostModal.jsx",["412","413","414","415","416","417","418","419"],[],"import {\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/modal\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { FaPhotoVideo } from \"react-icons/fa\";\r\nimport \"./CreatePostModal.css\";\r\nimport { GoLocation } from \"react-icons/go\";\r\nimport { GrEmoji } from \"react-icons/gr\";\r\nimport { Button, IconButton } from \"@chakra-ui/button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPost } from \"../../../Redux/Post/Action\";\r\nimport { uploadToCloudinary } from \"../../../Config/UploadToCloudinary\";\r\nimport SpinnerCard from \"../../Spinner/Spinner\";\r\nimport { ChevronLeftIcon, ChevronRightIcon } from \"@chakra-ui/icons\";\r\n\r\nconst CreatePostModal = ({ onOpen, isOpen, onClose }) => {\r\n  const [files, setFiles] = useState([]);\r\n  const [isDragOver, setIsDragOver] = useState(false);\r\n  const [uploadStatus, setUploadStatus] = useState(\"\");\r\n  const [currentMediaIndex, setCurrentMediaIndex] = useState(0);\r\n  \r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n  const { user } = useSelector(store => store);\r\n\r\n  const [postData, setPostData] = useState({ \r\n    mediaUrls: [], \r\n    caption: '', \r\n    location: \"\" \r\n  });\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPostData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    const droppedFiles = Array.from(event.dataTransfer.files);\r\n    handleFiles(droppedFiles);\r\n    setIsDragOver(false);\r\n  };\r\n\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"copy\";\r\n    setIsDragOver(true);\r\n  };\r\n\r\n  const handleDragLeave = () => {\r\n    setIsDragOver(false);\r\n  };\r\n\r\n  const handleOnChange = async (e) => {\r\n    const selectedFiles = Array.from(e.target.files);\r\n    handleFiles(selectedFiles);\r\n  };\r\n\r\n  const handleFiles = async (files) => {\r\n    const validFiles = files.filter(file => \r\n      file.type.startsWith(\"image/\") || file.type.startsWith(\"video/\")\r\n    );\r\n    \r\n    if (validFiles.length === 0) {\r\n      alert(\"Please select image or video files.\");\r\n      return;\r\n    }\r\n\r\n    setUploadStatus(\"uploading\");\r\n    try {\r\n      const uploadPromises = validFiles.map(file => uploadToCloudinary(file));\r\n      const urls = await Promise.all(uploadPromises);\r\n      \r\n      setPostData(prev => ({\r\n        ...prev,\r\n        mediaUrls: [...prev.mediaUrls, ...urls.filter(url => url)]\r\n      }));\r\n      setUploadStatus(\"uploaded\");\r\n    } catch (error) {\r\n      console.error(\"Upload failed:\", error);\r\n      setUploadStatus(\"error\");\r\n      alert(\"Failed to upload files. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleNextMedia = () => {\r\n    setCurrentMediaIndex(prev => \r\n      prev === postData.mediaUrls.length - 1 ? 0 : prev + 1\r\n    );\r\n  };\r\n\r\n  const handlePrevMedia = () => {\r\n    setCurrentMediaIndex(prev => \r\n      prev === 0 ? postData.mediaUrls.length - 1 : prev - 1\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!token || postData.mediaUrls.length === 0) return;\r\n    \r\n    const data = {\r\n      jwt: token,\r\n      data: postData,\r\n    };\r\n    \r\n    dispatch(createPost(data));\r\n    handleClose();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n    setFiles([]);\r\n    setIsDragOver(false);\r\n    setPostData({ mediaUrls: [], caption: '', location: \"\" });\r\n    setUploadStatus(\"\");\r\n    setCurrentMediaIndex(0);\r\n  };\r\n\r\n  const isVideo = (url) => {\r\n    return url.match(/\\.(mp4|webm|ogg)$/i);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        size={\"4xl\"}\r\n        finalFocusRef={React.useRef(null)}\r\n        isOpen={isOpen}\r\n        onClose={handleClose}\r\n      >\r\n        <ModalOverlay />\r\n        <ModalContent fontSize={\"sm\"}>\r\n          <div className=\"flex justify-between py-1 px-10 items-center\">\r\n            <p>Create New Post</p>\r\n            <Button\r\n              onClick={handleSubmit}\r\n              className=\"inline-flex\"\r\n              colorScheme=\"blue\"\r\n              size={\"sm\"}\r\n              variant=\"ghost\"\r\n              isDisabled={postData.mediaUrls.length === 0}\r\n            >\r\n              Share\r\n            </Button>\r\n          </div>\r\n\r\n          <hr className=\"hrLine\" />\r\n\r\n          <ModalBody>\r\n            <div className=\"modalBodyBox flex h-[70vh] justify-between\">\r\n              <div className=\"w-[50%] flex flex-col justify-center items-center relative\">\r\n                {uploadStatus === \"\" && (\r\n                  <div\r\n                    onDrop={handleDrop}\r\n                    onDragOver={handleDragOver}\r\n                    onDragLeave={handleDragLeave}\r\n                    className={`drag-drop h-full ${isDragOver ? \"border-blue-500\" : \"\"}`}\r\n                  >\r\n                    <div className=\"flex justify-center flex-col items-center\">\r\n                      <FaPhotoVideo className={`text-3xl ${isDragOver ? \"text-blue-800\" : \"\"}`} />\r\n                      <p>Drag photos or videos here</p>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\r\n                      Select from computer\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      id=\"file-upload\"\r\n                      accept=\"image/*, video/*\"\r\n                      multiple\r\n                      onChange={handleOnChange}\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {uploadStatus === \"uploading\" && <SpinnerCard />}\r\n\r\n                {uploadStatus === \"uploaded\" && (\r\n                  <div className=\"w-full h-full relative\">\r\n                    {postData.mediaUrls.map((url, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className={`absolute inset-0 flex items-center justify-center ${\r\n                          index === currentMediaIndex ? \"block\" : \"hidden\"\r\n                        }`}\r\n                      >\r\n                        {isVideo(url) ? (\r\n                          <video\r\n                            src={url}\r\n                            controls\r\n                            className=\"max-h-full max-w-full object-contain\"\r\n                          />\r\n                        ) : (\r\n                          <img\r\n                            src={url}\r\n                            alt={`Media ${index + 1}`}\r\n                            className=\"max-h-full max-w-full object-contain\"\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n\r\n                    {postData.mediaUrls.length > 1 && (\r\n                      <>\r\n                        {}\r\n                        <div className=\"absolute bottom-2 left-0 right-0 flex justify-center space-x-2\">\r\n                          {postData.mediaUrls.map((_, index) => (\r\n                            <button\r\n                              key={index}\r\n                              onClick={() => setCurrentMediaIndex(index)}\r\n                              className={`w-2 h-2 rounded-full ${\r\n                                index === currentMediaIndex ? \"bg-blue-500\" : \"bg-gray-300\"\r\n                              }`}\r\n                              aria-label={`Go to media ${index + 1}`}\r\n                            />\r\n                          ))}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"w-[1px] border h-full\"></div>\r\n              \r\n              <div className=\"w-[50%]\">\r\n                <div className=\"flex items-center px-2\">\r\n                  <img\r\n                    className=\"w-7 h-7 rounded-full\"\r\n                    src={user?.reqUser?.image || \"https://cdn.pixabay.com/photo/2023/02/28/03/42/ibex-7819817_640.jpg\"}\r\n                    alt=\"\"\r\n                  />\r\n                  <p className=\"font-semibold ml-4\">{user?.reqUser?.username}</p>\r\n                </div>\r\n                <div className=\"px-2\">\r\n                  <textarea\r\n                    className=\"captionInput\"\r\n                    placeholder=\"Write a description...\"\r\n                    name=\"caption\"\r\n                    rows=\"8\"\r\n                    value={postData.caption}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                </div>\r\n                <div className=\"flex justify-between px-2\">\r\n                  <GrEmoji />\r\n                  <p className=\"opacity-70\">{postData.caption?.length}/2,200</p>\r\n                </div>\r\n                <hr />\r\n                <div className=\"p-2 flex justify-between items-center\">\r\n                  <input\r\n                    className=\"locationInput\"\r\n                    type=\"text\"\r\n                    placeholder=\"Add Location\"\r\n                    name=\"location\"\r\n                    value={postData.location}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                  <GoLocation />\r\n                </div>\r\n                <hr />\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n        </ModalContent>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePostModal;","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Story\\StoryCircle\\StoryCircle.jsx",["420","421"],[],"import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { findStoryByUserId } from \"../../../Redux/Story/Action\";\r\n\r\n\r\nconst StoryCircle = ({ image, username, userId }) => {\r\n  const navigate = useNavigate();\r\n  const handleNavigate = () => {\r\n    navigate(`story/${userId}`);\r\n  };\r\n\r\n  \r\n  return (\r\n    <div className=\"cursor-pointer flex flex-col items-center\" onClick={handleNavigate}>\r\n      <img className=\"w-16 h-16 rounded-full\" src={image} alt=\"\" />\r\n      <p>\r\n        {username?.length > 9 ? username.substring(0, 9) + \"...\" : username}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryCircle;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Post\\PostCard\\PostCard.jsx",["422","423"],[],"import { useDisclosure } from \"@chakra-ui/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiFillLike, AiOutlineLike } from \"react-icons/ai\";\r\nimport {\r\n  FaRegComment,\r\n  FaShare,\r\n  FaRegBookmark,\r\n  FaBookmark,\r\n} from \"react-icons/fa\";\r\nimport { BsThreeDots, BsEmojiSmile } from \"react-icons/bs\";\r\nimport { createNotificationAction } from \"../../../Redux/Notification/Action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  isPostLikedByUser,\r\n  isReqUserPost,\r\n  isSavedPost,\r\n  timeDifference,\r\n} from \"../../../Config/Logic\";\r\nimport { createComment } from \"../../../Redux/Comment/Action\";\r\nimport {\r\n  deletePostAction,\r\n  likePostAction,\r\n  savePostAction,\r\n  unLikePostAction,\r\n  unSavePostAction,\r\n} from \"../../../Redux/Post/Action\";\r\nimport CommentModal from \"../../Comment/CommentModal\";\r\nimport \"./PostCard.css\";\r\nimport EditPostModal from \"../Create/EditPostModal\";\r\n\r\nconst PostCard = ({\r\n  userProfileImage,\r\n  username,\r\n  location,\r\n  post,\r\n  createdAt,\r\n}) => {\r\n  const [commentContent, setCommentContent] = useState();\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const token = localStorage.getItem(\"token\");\r\n  const { user } = useSelector((store) => store);\r\n  const [isSaved, setIsSaved] = useState(false);\r\n  const [isPostLiked, setIsPostLiked] = useState(false);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [currentMediaIndex, setCurrentMediaIndex] = useState(0);\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const [openEditPostModal, setOpenEditPostModal] = useState(false);\r\n\r\n  const handleCommentInputChange = (e) => {\r\n    setCommentContent(e.target.value);\r\n  };\r\n\r\n  const [numberOfLikes, setNumberOfLike] = useState(0);\r\n\r\n  const data = {\r\n    jwt: token,\r\n    postId: post.id,\r\n  };\r\n\r\n  const handleAddComment = () => {\r\n    const data = {\r\n      jwt: token,\r\n      postId: post.id,\r\n      data: {\r\n        content: commentContent,\r\n      },\r\n    };\r\n    dispatch(createComment(data));\r\n    setCommentContent(\"\");\r\n\r\n    if (post.user.id !== user.reqUser.id) {\r\n      const notification = {\r\n        message: `${user.reqUser.username} commented: ${commentContent}`,\r\n        type: \"COMMENT\",\r\n        postId: post.id,\r\n      };\r\n      dispatch(createNotificationAction(notification, token));\r\n    }\r\n  };\r\n\r\n  const handleOnEnterPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleAddComment();\r\n    }\r\n  };\r\n\r\n  const handleLikePost = () => {\r\n    dispatch(likePostAction(data));\r\n    setIsPostLiked(true);\r\n    setNumberOfLike(numberOfLikes + 1);\r\n\r\n    if (post.user.id !== user.reqUser.id) {\r\n      const notification = {\r\n        message: `${user.reqUser.username} liked your post`,\r\n        type: \"LIKE\",\r\n        postId: post.id,\r\n      };\r\n      dispatch(createNotificationAction(notification, token));\r\n    }\r\n  };\r\n\r\n  const handleUnLikePost = () => {\r\n    dispatch(unLikePostAction(data));\r\n    setIsPostLiked(false);\r\n    setNumberOfLike(numberOfLikes - 1);\r\n  };\r\n\r\n  const handleSavePost = () => {\r\n    dispatch(savePostAction(data));\r\n    setIsSaved(true);\r\n  };\r\n\r\n  const handleUnSavePost = () => {\r\n    dispatch(unSavePostAction(data));\r\n    setIsSaved(false);\r\n  };\r\n\r\n  const handleNavigate = (username) => {\r\n    navigate(`/${username}`);\r\n  };\r\n\r\n  const handleNextMedia = () => {\r\n    setCurrentMediaIndex((prev) =>\r\n      prev === post.mediaUrls.length - 1 ? 0 : prev + 1\r\n    );\r\n  };\r\n\r\n  const handlePrevMedia = () => {\r\n    setCurrentMediaIndex((prev) =>\r\n      prev === 0 ? post.mediaUrls.length - 1 : prev - 1\r\n    );\r\n  };\r\n\r\n  const isVideo = (url) => {\r\n    return url.match(/\\.(mp4|webm|ogg)$/i);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsSaved(isSavedPost(user.reqUser, post.id));\r\n    setIsPostLiked(isPostLikedByUser(post, user.reqUser?.id));\r\n    setNumberOfLike(post?.likedByUsers?.length);\r\n  }, [user.reqUser, post]);\r\n\r\n  const handleClick = () => {\r\n    setShowDropdown(!showDropdown);\r\n  };\r\n\r\n  const handleWindowClick = (event) => {\r\n    if (!event.target.matches(\".dots\")) {\r\n      setShowDropdown(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"click\", handleWindowClick);\r\n    return () => {\r\n      window.removeEventListener(\"click\", handleWindowClick);\r\n    };\r\n  }, []);\r\n\r\n  const handleDeletePost = (postId) => {\r\n    const data = {\r\n      jwt: token,\r\n      postId,\r\n    };\r\n    dispatch(deletePostAction(data));\r\n  };\r\n\r\n  const isOwnPost = isReqUserPost(post, user.reqUser);\r\n\r\n  const handleOpenCommentModal = () => {\r\n    navigate(`/p/${post.id}`);\r\n    onOpen();\r\n  };\r\n\r\n  const handleCloseEditPostModal = () => {\r\n    setOpenEditPostModal(false);\r\n  };\r\n\r\n  const handleOpenEditPostModal = () => {\r\n    setOpenEditPostModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto bg-white rounded-lg shadow-md mb-4\">\r\n      {/* Post Header */}\r\n      <div className=\"flex items-center justify-between p-3 border-b\">\r\n        <div className=\"flex items-center\">\r\n          <img\r\n            className=\"w-10 h-10 rounded-full object-cover\"\r\n            src={\r\n              post.user.userImage ||\r\n              \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n          <div className=\"ml-2\">\r\n            <div\r\n              className=\"font-semibold text-sm hover:underline cursor-pointer\"\r\n              onClick={() => handleNavigate(username)}\r\n            >\r\n              {post?.user?.username}\r\n            </div>\r\n            <div className=\"text-xs text-gray-500\">\r\n              {timeDifference(post?.createdAt)} • {location}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {isOwnPost && (\r\n          <div className=\"relative\">\r\n            <BsThreeDots\r\n              onClick={handleClick}\r\n              className=\"dots text-gray-500 cursor-pointer hover:bg-gray-100 rounded-full p-1\"\r\n              size={20}\r\n            />\r\n            {showDropdown && (\r\n              <div className=\"absolute right-0 mt-2 w-48 bg-white rounded-md shadow-lg z-10\">\r\n                <div className=\"py-1\">\r\n                  <button\r\n                    onClick={handleOpenEditPostModal}\r\n                    className=\"block w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  >\r\n                    Edit Post\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDeletePost(post.id)}\r\n                    className=\"block w-full text-left px-4 py-2 text-sm text-red-500 hover:bg-gray-100\"\r\n                  >\r\n                    Delete Post\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Post Content */}\r\n      <div className=\"p-3\">\r\n        <p className=\"mb-2\">{post.caption}</p>\r\n      </div>\r\n\r\n      {/* Media Section */}\r\n      <div className=\"relative\">\r\n        {post.mediaUrls?.map((url, index) => (\r\n          <div\r\n            key={index}\r\n            className={`${index === currentMediaIndex ? \"block\" : \"hidden\"}`}\r\n          >\r\n            {isVideo(url) ? (\r\n              <video src={url} controls className=\"w-full\" />\r\n            ) : (\r\n              <img\r\n                src={url}\r\n                alt={`Post media ${index + 1}`}\r\n                className=\"w-full\"\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n        {post.mediaUrls?.length > 1 && (\r\n          <div className=\"absolute bottom-2 left-0 right-0 flex justify-center space-x-2\">\r\n            {post.mediaUrls?.map((_, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => setCurrentMediaIndex(index)}\r\n                className={`w-2 h-2 rounded-full ${\r\n                  index === currentMediaIndex ? \"bg-blue-500\" : \"bg-gray-300\"\r\n                }`}\r\n                aria-label={`Go to media ${index + 1}`}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Likes and Comments Count */}\r\n      <div className=\"px-4 py-2 border-b border-t text-sm text-gray-500\">\r\n        <div className=\"flex justify-between\">\r\n          <div className=\"flex items-center\">\r\n            {numberOfLikes > 0 && (\r\n              <>\r\n                <div className=\"bg-blue-500 text-white rounded-full p-1 mr-1\">\r\n                  <AiFillLike size={12} />\r\n                </div>\r\n                <span>{numberOfLikes}</span>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div>\r\n            {post?.comments?.length > 0 && (\r\n              <span\r\n                className=\"hover:underline cursor-pointer\"\r\n                onClick={handleOpenCommentModal}\r\n              >\r\n                {post?.comments?.length} comments\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Action Buttons */}\r\n      <div className=\"px-4 py-2 flex justify-between text-gray-500\">\r\n        <button\r\n          onClick={isPostLiked ? handleUnLikePost : handleLikePost}\r\n          className={`flex items-center justify-center w-full py-1 rounded hover:bg-gray-100 ${\r\n            isPostLiked ? \"text-blue-500\" : \"\"\r\n          }`}\r\n        >\r\n          <AiOutlineLike className=\"mr-1\" size={18} />\r\n          <span>Like</span>\r\n        </button>\r\n        <button\r\n          onClick={handleOpenCommentModal}\r\n          className=\"flex items-center justify-center w-full py-1 rounded hover:bg-gray-100\"\r\n        >\r\n          <FaRegComment className=\"mr-1\" size={16} />\r\n          <span>Comment</span>\r\n        </button>\r\n        <button className=\"flex items-center justify-center w-full py-1 rounded hover:bg-gray-100\">\r\n          <FaShare className=\"mr-1\" size={16} />\r\n          <span>Share</span>\r\n        </button>\r\n        <button\r\n          onClick={isSaved ? handleUnSavePost : handleSavePost}\r\n          className=\"flex items-center justify-center w-full py-1 rounded hover:bg-gray-100\"\r\n        >\r\n          {isSaved ? (\r\n            <FaBookmark className=\"mr-1\" size={16} />\r\n          ) : (\r\n            <FaRegBookmark className=\"mr-1\" size={16} />\r\n          )}\r\n          <span>Save</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Comment Input */}\r\n      <div className=\"flex items-center p-3 border-t\">\r\n        <img\r\n          className=\"w-8 h-8 rounded-full object-cover mr-2\"\r\n          src={\r\n            user.reqUser?.userImage ||\r\n            \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n          }\r\n          alt=\"\"\r\n        />\r\n        <div className=\"flex-1 relative\">\r\n          <input\r\n            onKeyPress={handleOnEnterPress}\r\n            onChange={handleCommentInputChange}\r\n            value={commentContent}\r\n            className=\"w-full bg-gray-100 rounded-full py-2 px-4 text-sm focus:outline-none\"\r\n            type=\"text\"\r\n            placeholder=\"Write a comment...\"\r\n          />\r\n          <BsEmojiSmile className=\"absolute right-3 top-2 text-gray-400\" />\r\n        </div>\r\n      </div>\r\n\r\n      <EditPostModal\r\n        onClose={handleCloseEditPostModal}\r\n        isOpen={openEditPostModal}\r\n        onOpen={handleOpenEditPostModal}\r\n        post={post}\r\n      />\r\n\r\n      <CommentModal\r\n        handleLikePost={handleLikePost}\r\n        handleSavePost={handleSavePost}\r\n        handleUnSavePost={handleUnSavePost}\r\n        handleUnLikePost={handleUnLikePost}\r\n        isPostLiked={isPostLiked}\r\n        isSaved={isSaved}\r\n        postData={post}\r\n        isOpen={isOpen}\r\n        onClose={onClose}\r\n        onOpen={onOpen}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\LearningProgress\\Action.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\ProfilePageCard\\UserDetailCard.jsx",["424"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { TbCircleDashed } from \"react-icons/tb\";\r\nimport { FiEdit, FiMessageSquare } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { followUserAction, unFollowUserAction } from \"../../Redux/User/Action\";\r\n\r\nconst UserDetailCard = ({ user, isRequser, isFollowing }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const { post } = useSelector((store) => store);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [isFollow, setIsFollow] = useState(false);\r\n\r\n  const goToAccountEdit = () => navigate(\"/account/edit\");\r\n\r\n  const data = { jwt: token, userId: user?.id };\r\n\r\n  const handleFollowUser = () => {\r\n    dispatch(followUserAction(data));\r\n    setIsFollow(true);\r\n  };\r\n\r\n  const handleUnFollowUser = () => {\r\n    dispatch(unFollowUserAction(data));\r\n    setIsFollow(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsFollow(isFollowing);\r\n  }, [isFollowing]);\r\n\r\n  return (\r\n    <div className=\"w-full max-w-5xl mx-auto bg-white shadow rounded-md\">\r\n      {/* Cover Photo */}\r\n      <div className=\"relative h-48 bg-gray-200 rounded-t-md\">\r\n        {/* Profile Picture */}\r\n        <div className=\"absolute -bottom-12 left-6\">\r\n          <img\r\n            className=\"h-24 w-24 rounded-full border-4 border-white object-cover\"\r\n            src={\r\n              user?.image ||\r\n              \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n            }\r\n            alt={user?.username}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Info Section */}\r\n      <div className=\"pt-16 pb-6 px-6 md:flex md:items-center md:justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold\">{user?.username}</h2>\r\n          <p className=\"text-gray-600\">{user?.name}</p>\r\n          <p className=\"text-sm text-gray-700 mt-1\">{user?.bio}</p>\r\n        </div>\r\n\r\n        {/* Buttons */}\r\n        <div className=\"mt-4 md:mt-0 flex gap-3 flex-wrap items-center\">\r\n          {isRequser ? (\r\n            <button\r\n              onClick={goToAccountEdit}\r\n              className=\"flex items-center gap-2 bg-gray-100 hover:bg-gray-200 px-4 py-2 rounded-md text-sm font-medium\"\r\n            >\r\n              <FiEdit size={16} />\r\n              Edit Profile\r\n            </button>\r\n          ) : isFollow ? (\r\n            <button\r\n              onClick={handleUnFollowUser}\r\n              className=\"bg-gray-100 hover:bg-gray-200 px-5 py-2 rounded-md text-sm font-medium\"\r\n            >\r\n              Following\r\n            </button>\r\n          ) : (\r\n            <button\r\n              onClick={handleFollowUser}\r\n              className=\"bg-blue-500 hover:bg-blue-600 text-white px-5 py-2 rounded-md text-sm font-medium\"\r\n            >\r\n              Follow\r\n            </button>\r\n          )}\r\n          <button className=\"p-2 rounded-full hover:bg-gray-100\">\r\n            <TbCircleDashed size={20} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Stats Bar */}\r\n      <div className=\"border-t px-6 py-4 flex justify-around text-center\">\r\n        <div>\r\n          <span className=\"font-semibold text-lg\">\r\n            {post?.reqUserPost?.length || 0}\r\n          </span>\r\n          <p className=\"text-gray-600 text-sm\">Posts</p>\r\n        </div>\r\n        <div>\r\n          <span className=\"font-semibold text-lg\">\r\n            {user?.follower?.length || 0}\r\n          </span>\r\n          <p className=\"text-gray-600 text-sm\">Followers</p>\r\n        </div>\r\n        <div>\r\n          <span className=\"font-semibold text-lg\">\r\n            {user?.following?.length || 0}\r\n          </span>\r\n          <p className=\"text-gray-600 text-sm\">Following</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDetailCard;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Config\\Debounce.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Auth\\Action.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Config\\UploadVideoToCloudnary.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Redux\\Comment\\Action.js",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\EditProfileComponent\\ChangeProfilePhotoModal.jsx",["425","426","427","428"],[],"import {\r\n  Button,\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n  useDisclosure,\r\n} from \"@chakra-ui/react\";\r\n\r\n\r\nfunction ChangeProfilePhotoModal({ isOpen, onOpen, onClose,handleProfileImageChange }) {\r\n  return (\r\n    <>\r\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\r\n        <ModalOverlay />\r\n        <ModalContent>\r\n          <ModalHeader textAlign={\"center\"}>Modal Title</ModalHeader>\r\n\r\n          <ModalBody>\r\n            <div className=\"flex flex-col items-center\">\r\n              <label\r\n                for=\"profileImage\"\r\n                className=\"font-bold py-3 text-blue-600 text-center cursor-pointer text-xs w-full\"\r\n              >\r\n                Upload Photo\r\n              </label>\r\n\r\n              <input onChange={handleProfileImageChange} type=\"file\" id=\"profileImage\" name=\"profileImage\" />\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <p className=\"font-bold py-3 text-red-600 text-center\">\r\n              Remove Photo\r\n            </p>\r\n            <hr />\r\n            <p className=\" py-3 text-center\" onClick={onClose}>\r\n              Cancel\r\n            </p>\r\n          </ModalBody>\r\n          {/* <ModalFooter>\r\n              <Button onClick={onClose}>Close</Button>\r\n            </ModalFooter> */}\r\n        </ModalContent>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChangeProfilePhotoModal;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\SearchComponent\\SearchUserCard.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\ProfilePageCard\\ReqUserPostCard.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\HomeRight\\SuggestionsUserCard.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Demo\\StoryProgress.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Comment\\CommentModal.jsx",["429","430"],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Spinner\\Spinner.jsx",[],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Post\\Create\\EditPostModal.jsx",["431","432","433","434","435","436","437"],[],"import {\r\n  Modal,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalOverlay,\r\n} from \"@chakra-ui/modal\";\r\n\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { FaPhotoVideo } from \"react-icons/fa\";\r\nimport \"./CreatePostModal.css\";\r\nimport { GoLocation } from \"react-icons/go\";\r\nimport { GrEmoji } from \"react-icons/gr\";\r\nimport { Button } from \"@chakra-ui/button\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPost, findPostByIdAction } from \"../../../Redux/Post/Action\";\r\nimport { uploadToCloudinary } from \"../../../Config/UploadToCloudinary\";\r\nimport CommentModal from \"../../Comment/CommentModal\";\r\nimport SpinnerCard from \"../../Spinner/Spinner\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { editPOst } from \"../../../Redux/Post/Action\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\n\r\nconst EditPostModal = ({ isOpen, onClose, post }) => {\r\n  const dispatch = useDispatch();\r\n  const token = localStorage.getItem(\"token\");\r\n  const { user } = useSelector((store) => store);\r\n  const [loading, setLoading] = useState(false);\r\n  const toast = useToast();\r\n  const fileInputRef = useRef(null);\r\n\r\n  const [postData, setPostData] = useState({\r\n    caption: \"\",\r\n    location: \"\",\r\n    mediaUrls: [],\r\n    id: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setPostData({\r\n        caption: post.caption || \"\",\r\n        location: post.location || \"\",\r\n        mediaUrls: post.mediaUrls || [],\r\n        id: post.id\r\n      });\r\n    }\r\n  }, [post]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setPostData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleImageClick = () => {\r\n    fileInputRef.current?.click();\r\n  };\r\n\r\n  const handleImageChange = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      if (file.type.startsWith('image/')) {\r\n        setLoading(true);\r\n        try {\r\n          const imageUrl = await uploadToCloudinary(file);\r\n          if (imageUrl) {\r\n            setPostData(prev => ({\r\n              ...prev,\r\n              mediaUrls: [imageUrl]\r\n            }));\r\n            toast({\r\n              title: \"Image uploaded successfully\",\r\n              status: \"success\",\r\n              duration: 3000,\r\n              isClosable: true,\r\n            });\r\n          } else {\r\n            throw new Error(\"Failed to get image URL\");\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error uploading image:\", error);\r\n          toast({\r\n            title: \"Failed to upload image\",\r\n            description: \"Please try again\",\r\n            status: \"error\",\r\n            duration: 3000,\r\n            isClosable: true,\r\n          });\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      } else {\r\n        toast({\r\n          title: \"Invalid file type\",\r\n          description: \"Please select an image file\",\r\n          status: \"error\",\r\n          duration: 3000,\r\n          isClosable: true,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!postData.id) return;\r\n\r\n    const data = {\r\n      jwt: token,\r\n      data: {\r\n        id: postData.id,\r\n        caption: postData.caption,\r\n        location: postData.location,\r\n        mediaUrls: postData.mediaUrls\r\n      }\r\n    };\r\n\r\n    dispatch(editPOst(data));\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal size={\"4xl\"} isOpen={isOpen} onClose={onClose}>\r\n      <ModalOverlay />\r\n      <ModalContent>\r\n        <div className=\"flex justify-between py-1 px-10 items-center\">\r\n          <p className=\"font-semibold\">Edit Post</p>\r\n          <Button\r\n            onClick={handleSubmit}\r\n            colorScheme=\"blue\"\r\n            size={\"sm\"}\r\n            isLoading={loading}\r\n            loadingText=\"Updating...\"\r\n          >\r\n            Update\r\n          </Button>\r\n        </div>\r\n\r\n        <hr className=\"hrLine\" />\r\n\r\n        <ModalBody>\r\n          <div className=\"modalBodyBox flex h-[70vh] justify-between\">\r\n            <div className=\"w-[50%] flex flex-col justify-center items-center relative\">\r\n              <div \r\n                className=\"w-full h-full flex items-center justify-center relative group cursor-pointer\"\r\n                onClick={handleImageClick}\r\n              >\r\n                {postData.mediaUrls?.length > 0 ? (\r\n                  <>\r\n                    <img\r\n                      className=\"max-h-[70vh] object-contain\"\r\n                      src={postData.mediaUrls[0]}\r\n                      alt=\"post\"\r\n                    />\r\n                    <div className=\"absolute inset-0 bg-black bg-opacity-50 opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity\">\r\n                      <p className=\"text-white text-center\">Click to change image</p>\r\n                    </div>\r\n                  </>\r\n                ) : (\r\n                  <div className=\"flex flex-col items-center\">\r\n                    <FaPhotoVideo className=\"text-3xl mb-2\" />\r\n                    <p>Click here to upload photo</p>\r\n                  </div>\r\n                )}\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={handleImageChange}\r\n                  ref={fileInputRef}\r\n                  className=\"hidden\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"w-[1px] border h-full\"></div>\r\n            <div className=\"w-[50%]\">\r\n              <div className=\"flex items-center px-2\">\r\n                <img\r\n                  className=\"w-7 h-7 rounded-full\"\r\n                  src={user?.reqUser?.image || \"https://cdn.pixabay.com/photo/2023/02/28/03/42/ibex-7819817_640.jpg\"}\r\n                  alt=\"\"\r\n                />\r\n                <p className=\"font-semibold ml-4\">{user?.reqUser?.username}</p>\r\n              </div>\r\n              <div className=\"px-2\">\r\n                <textarea\r\n                  className=\"captionInput\"\r\n                  placeholder=\"Write a caption...\"\r\n                  name=\"caption\"\r\n                  rows=\"8\"\r\n                  value={postData.caption}\r\n                  onChange={handleInputChange}\r\n                />\r\n              </div>\r\n              <div className=\"flex justify-between px-2\">\r\n                <GrEmoji />\r\n                <p className=\"opacity-70\">{postData.caption?.length}/2,200</p>\r\n              </div>\r\n              <hr />\r\n              <div className=\"p-2 flex justify-between items-center\">\r\n                <input\r\n                  className=\"locationInput\"\r\n                  type=\"text\"\r\n                  placeholder=\"Add location\"\r\n                  name=\"location\"\r\n                  value={postData.location}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <GoLocation />\r\n              </div>\r\n              <hr />\r\n            </div>\r\n          </div>\r\n        </ModalBody>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default EditPostModal;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Comment\\CommentCard.jsx",["438","439","440","441","442","443"],[],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  AiFillLike,\r\n  AiOutlineLike,\r\n  AiFillHeart,\r\n  AiOutlineHeart,\r\n} from \"react-icons/ai\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isCommentLikedByUser, timeDifference } from \"../../Config/Logic\";\r\nimport { deleteComment, likeComment } from \"../../Redux/Comment/Action\";\r\nimport { BsEmojiSmile, BsThreeDots, BsReply } from \"react-icons/bs\";\r\nimport { MdDelete, MdEdit } from \"react-icons/md\";\r\nimport { editComment } from \"../../Redux/Comment/Action\";\r\n\r\nconst CommentCard = ({ comment }) => {\r\n  const [isCommentLiked, setIsCommentLike] = useState(false);\r\n  const { user } = useSelector((store) => store);\r\n  const [commentLikes, setCommentLikes] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const jwt = localStorage.getItem(\"token\");\r\n  const [isEditCommentInputOpen, setIsEditCommentInputOpen] = useState(false);\r\n  const [commentContent, setCommentContent] = useState(\"\");\r\n  const [showOptions, setShowOptions] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setCommentContent(comment?.content);\r\n  }, [comment]);\r\n\r\n  const handleLikeComment = () => {\r\n    dispatch(likeComment({ jwt, commentId: comment.id }));\r\n    setIsCommentLike(true);\r\n    setCommentLikes(commentLikes + 1);\r\n  };\r\n\r\n  const handleUnLikeComment = () => {\r\n    dispatch(likeComment({ jwt, commentId: comment.id }));\r\n    setIsCommentLike(false);\r\n    setCommentLikes(commentLikes - 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCommentLikes(comment?.likedByUsers?.length);\r\n  }, [comment]);\r\n\r\n  useEffect(() => {\r\n    setIsCommentLike(isCommentLikedByUser(comment, user.reqUser?.id));\r\n  }, [comment, user.reqUser]);\r\n\r\n  const handleClickOnEditComment = () => {\r\n    setIsEditCommentInputOpen(!isEditCommentInputOpen);\r\n    setShowOptions(false);\r\n  };\r\n\r\n  const handleCommnetInputChange = (e) => {\r\n    setCommentContent(e.target.value);\r\n  };\r\n\r\n  const handleDeleteComment = () => {\r\n    dispatch(deleteComment({ commentId: comment.id, jwt }));\r\n    setShowOptions(false);\r\n  };\r\n\r\n  const handleEditComment = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      dispatch(\r\n        editComment({ data: { id: comment?.id, content: commentContent }, jwt })\r\n      );\r\n      setIsEditCommentInputOpen(false);\r\n      setCommentContent(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <div className=\"flex items-start py-2 px-3 hover:bg-gray-50 rounded-lg\">\r\n        <div className=\"flex-shrink-0 mr-2\">\r\n          <img\r\n            className=\"w-8 h-8 rounded-full object-cover\"\r\n            src={\r\n              comment?.userDto.userImage ||\r\n              \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"flex-1 min-w-0\">\r\n          <div className=\"bg-gray-100 rounded-2xl px-3 py-2\">\r\n            <div className=\"flex items-baseline\">\r\n              <span className=\"font-semibold text-sm hover:underline cursor-pointer mr-2\">\r\n                {comment.userDto.username}\r\n              </span>\r\n              <span className=\"text-xs text-gray-500\">\r\n                {timeDifference(comment?.createdAt)}\r\n              </span>\r\n            </div>\r\n\r\n            {isEditCommentInputOpen ? (\r\n              <input\r\n                className=\"w-full bg-white border border-gray-300 rounded px-2 py-1 mt-1 text-sm focus:outline-none focus:border-blue-500\"\r\n                placeholder=\"Edit your comment...\"\r\n                type=\"text\"\r\n                onKeyPress={handleEditComment}\r\n                onChange={handleCommnetInputChange}\r\n                value={commentContent}\r\n                autoFocus\r\n              />\r\n            ) : (\r\n              <p className=\"text-sm mt-1\">{comment.content}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"flex items-center text-xs text-gray-500 mt-1 ml-2 space-x-3\">\r\n            <button\r\n              onClick={isCommentLiked ? handleUnLikeComment : handleLikeComment}\r\n              className={`hover:underline ${\r\n                isCommentLiked ? \"text-blue-500 font-semibold\" : \"\"\r\n              }`}\r\n            >\r\n              Like\r\n            </button>\r\n            <button className=\"hover:underline\">Reply</button>\r\n            {commentLikes > 0 && (\r\n              <span className=\"text-xs\">\r\n                {commentLikes} {commentLikes === 1 ? \"like\" : \"likes\"}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {user?.reqUser?.id === comment?.userDto?.id && (\r\n          <div className=\"relative\">\r\n            <button\r\n              onClick={() => setShowOptions(!showOptions)}\r\n              className=\"text-gray-500 hover:bg-gray-200 rounded-full p-1\"\r\n            >\r\n              <BsThreeDots size={16} />\r\n            </button>\r\n\r\n            {showOptions && (\r\n              <div className=\"absolute right-0 mt-1 w-40 bg-white rounded-md shadow-lg z-10 border border-gray-200\">\r\n                <button\r\n                  onClick={handleClickOnEditComment}\r\n                  className=\"flex items-center w-full px-3 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  <MdEdit className=\"mr-2\" />\r\n                  Edit\r\n                </button>\r\n                <button\r\n                  onClick={handleDeleteComment}\r\n                  className=\"flex items-center w-full px-3 py-2 text-sm text-red-500 hover:bg-gray-100\"\r\n                >\r\n                  <MdDelete className=\"mr-2\" />\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentCard;\r\n","D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Comment\\EditCommentModal.jsx",["444","445","446","447"],[],"D:\\SLIIT IT\\Year 3 Semester 2\\PAF\\CodeVera-Coding-Sharing\\client\\src\\Components\\Navbar\\Navbar.jsx",["448"],[],"import { useDisclosure } from \"@chakra-ui/hooks\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useSelector } from \"react-redux\";\r\nimport CreatePostModal from \"../Post/Create/CreatePostModal\";\r\nimport CreateReelModal from \"../Create/CreateReel\";\r\n\r\nconst Navbar = () => {\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState(\"Home\");\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const { user } = useSelector((store) => store);\r\n  const [showProfileDropdown, setShowProfileDropdown] = useState(false);\r\n  const [showFeaturesDropdown, setShowFeaturesDropdown] = useState(false);\r\n\r\n  const menuItems = [\r\n    { title: \"Home\" },\r\n    { title: \"Features\" },\r\n    { title: \"Explore\" },\r\n    { title: \"Notifications\" },\r\n    { title: \"About Us\" },\r\n    \r\n  ];\r\n\r\n  const handleTabClick = (tab) => {\r\n    setActiveTab(tab);\r\n    setShowProfileDropdown(false);\r\n    setShowFeaturesDropdown(false);\r\n\r\n    switch (tab) {\r\n      case \"Profile\":\r\n        navigate(`/${user.reqUser?.username}`);\r\n        break;\r\n      case \"Home\":\r\n        navigate(\"/\");\r\n        break;\r\n      case \"Create Post\":\r\n        onOpen();\r\n        break;\r\n      case \"About Us\":\r\n        navigate(\"/about\");\r\n        break;\r\n      case \"Notifications\":\r\n        navigate(\"/notifications\");\r\n        break;\r\n      case \"Create Story\":\r\n        navigate(\"/create-story\");\r\n        break;\r\n      case \"Learning Plan\":\r\n        navigate(\"/learning_plan\");\r\n        break;\r\n      case \"Learning Progress\":\r\n        navigate(\"/learning-progress\");\r\n        break;\r\n      \r\n    }\r\n\r\n    \r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.clear();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Top Navbar */}\r\n      <div className=\"fixed top-0 left-0 w-full h-16 bg-white dark:bg-gray-900 shadow z-50 flex items-center justify-between px-8 sm:px-10 md:px-16 lg:px-24\">\r\n        {/* Logo */}\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center text-white font-bold\">\r\n            CV\r\n          </div>\r\n          <span className=\"text-xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-blue-500 to-purple-600 ml-2\">\r\n            CodeVera\r\n          </span>\r\n        </div>\r\n\r\n        {/* Nav Items */}\r\n        <div className=\"flex items-center space-x-6\">\r\n          {menuItems.map((item) =>\r\n            item.title === \"Features\" ? (\r\n              <div key={item.title} className=\"relative\">\r\n                <button\r\n                  onClick={() => setShowFeaturesDropdown(!showFeaturesDropdown)}\r\n                  className={`px-3 py-1 rounded-md ${\r\n                    activeTab === item.title\r\n                      ? \"text-blue-600 dark:text-purple-400\"\r\n                      : \"text-gray-700 dark:text-gray-300 hover:text-blue-600\"\r\n                  }`}\r\n                >\r\n                  {item.title}\r\n                </button>\r\n                {showFeaturesDropdown && (\r\n                  <div className=\"absolute left-0 mt-2 w-52 bg-white dark:bg-gray-800 border dark:border-gray-700 rounded-md shadow-lg z-10 p-2\">\r\n                    <button\r\n                      onClick={() => handleTabClick(\"Create Post\")}\r\n                      className=\"w-full text-left px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\r\n                    >\r\n                      Create Post\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleTabClick(\"Create Story\")}\r\n                      className=\"w-full text-left px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\r\n                    >\r\n                      Create Story\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleTabClick(\"Learning Plan\")}\r\n                      className=\"w-full text-left px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\r\n                    >\r\n                      Learning Plan\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleTabClick(\"Learning Progress\")}\r\n                      className=\"w-full text-left px-4 py-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\"\r\n                    >\r\n                      Learning Progress\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ) : (\r\n              <button\r\n                key={item.title}\r\n                onClick={() => handleTabClick(item.title)}\r\n                className={`px-3 py-1 rounded-md ${\r\n                  activeTab === item.title\r\n                    ? \"text-blue-600 dark:text-purple-400\"\r\n                    : \"text-gray-700 dark:text-gray-300 hover:text-blue-600\"\r\n                }`}\r\n              >\r\n                {item.title}\r\n              </button>\r\n            )\r\n          )}\r\n\r\n          {/* Profile Dropdown */}\r\n          <div className=\"relative\">\r\n            <button\r\n              onClick={() => setShowProfileDropdown(!showProfileDropdown)}\r\n              className=\"text-gray-700 dark:text-gray-300 hover:text-blue-600 px-3 py-1 rounded-md\"\r\n            >\r\n              Profile\r\n            </button>\r\n            {showProfileDropdown && (\r\n              <div className=\"absolute right-0 mt-2 w-40 bg-white dark:bg-gray-800 rounded shadow-md z-10 border dark:border-gray-700\">\r\n                <button\r\n                  onClick={() => handleTabClick(\"Profile\")}\r\n                  className=\"block w-full px-4 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                >\r\n                  Profile\r\n                </button>\r\n                <button\r\n                  onClick={handleLogout}\r\n                  className=\"block w-full px-4 py-2 text-left hover:bg-gray-100 dark:hover:bg-gray-700\"\r\n                >\r\n                  Logout\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      \r\n\r\n      {/* Modals */}\r\n      <CreatePostModal onClose={onClose} isOpen={isOpen} onOpen={onOpen} />\r\n      <CreateReelModal onClose={() => {}} isOpen={false} onOpen={() => {}} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n",{"ruleId":"449","severity":1,"message":"450","line":1,"column":10,"nodeType":"451","messageId":"452","endLine":1,"endColumn":16},{"ruleId":"449","severity":1,"message":"453","line":23,"column":9,"nodeType":"451","messageId":"452","endLine":23,"endColumn":16},{"ruleId":"454","severity":1,"message":"455","line":29,"column":6,"nodeType":"456","endLine":29,"endColumn":13,"suggestions":"457"},{"ruleId":"454","severity":1,"message":"458","line":25,"column":6,"nodeType":"456","endLine":25,"endColumn":47,"suggestions":"459"},{"ruleId":"449","severity":1,"message":"460","line":22,"column":9,"nodeType":"451","messageId":"452","endLine":22,"endColumn":17},{"ruleId":"454","severity":1,"message":"455","line":26,"column":6,"nodeType":"456","endLine":26,"endColumn":13,"suggestions":"461"},{"ruleId":"454","severity":1,"message":"458","line":46,"column":6,"nodeType":"456","endLine":46,"endColumn":69,"suggestions":"462"},{"ruleId":"449","severity":1,"message":"463","line":12,"column":3,"nodeType":"451","messageId":"452","endLine":12,"endColumn":10},{"ruleId":"449","severity":1,"message":"464","line":19,"column":10,"nodeType":"451","messageId":"452","endLine":19,"endColumn":18},{"ruleId":"465","severity":1,"message":"466","line":333,"column":15,"nodeType":"467","endLine":336,"endColumn":16},{"ruleId":"465","severity":1,"message":"466","line":341,"column":15,"nodeType":"467","endLine":344,"endColumn":16},{"ruleId":"454","severity":1,"message":"468","line":46,"column":6,"nodeType":"456","endLine":46,"endColumn":16,"suggestions":"469"},{"ruleId":"449","severity":1,"message":"470","line":4,"column":10,"nodeType":"451","messageId":"452","endLine":4,"endColumn":16},{"ruleId":"454","severity":1,"message":"458","line":56,"column":6,"nodeType":"456","endLine":56,"endColumn":30,"suggestions":"471"},{"ruleId":"449","severity":1,"message":"472","line":4,"column":3,"nodeType":"451","messageId":"452","endLine":4,"endColumn":19},{"ruleId":"449","severity":1,"message":"473","line":6,"column":3,"nodeType":"451","messageId":"452","endLine":6,"endColumn":14},{"ruleId":"449","severity":1,"message":"474","line":10,"column":17,"nodeType":"451","messageId":"452","endLine":10,"endColumn":26},{"ruleId":"449","severity":1,"message":"475","line":16,"column":10,"nodeType":"451","messageId":"452","endLine":16,"endColumn":28},{"ruleId":"449","severity":1,"message":"476","line":23,"column":10,"nodeType":"451","messageId":"452","endLine":23,"endColumn":14},{"ruleId":"449","severity":1,"message":"477","line":36,"column":25,"nodeType":"451","messageId":"452","endLine":36,"endColumn":41},{"ruleId":"454","severity":1,"message":"455","line":49,"column":6,"nodeType":"456","endLine":49,"endColumn":13,"suggestions":"478"},{"ruleId":"454","severity":1,"message":"479","line":61,"column":6,"nodeType":"456","endLine":61,"endColumn":20,"suggestions":"480"},{"ruleId":"454","severity":1,"message":"455","line":37,"column":6,"nodeType":"456","endLine":37,"endColumn":21,"suggestions":"481"},{"ruleId":"454","severity":1,"message":"482","line":49,"column":6,"nodeType":"456","endLine":49,"endColumn":20,"suggestions":"483"},{"ruleId":"454","severity":1,"message":"484","line":52,"column":6,"nodeType":"456","endLine":52,"endColumn":19,"suggestions":"485"},{"ruleId":"449","severity":1,"message":"486","line":22,"column":10,"nodeType":"451","messageId":"452","endLine":22,"endColumn":31},{"ruleId":"449","severity":1,"message":"487","line":22,"column":32,"nodeType":"451","messageId":"452","endLine":22,"endColumn":56},{"ruleId":"454","severity":1,"message":"488","line":59,"column":6,"nodeType":"456","endLine":59,"endColumn":25,"suggestions":"489"},{"ruleId":"449","severity":1,"message":"472","line":4,"column":3,"nodeType":"451","messageId":"452","endLine":4,"endColumn":19},{"ruleId":"449","severity":1,"message":"473","line":6,"column":3,"nodeType":"451","messageId":"452","endLine":6,"endColumn":14},{"ruleId":"449","severity":1,"message":"490","line":15,"column":18,"nodeType":"451","messageId":"452","endLine":15,"endColumn":28},{"ruleId":"449","severity":1,"message":"491","line":20,"column":10,"nodeType":"451","messageId":"452","endLine":20,"endColumn":25},{"ruleId":"449","severity":1,"message":"492","line":20,"column":27,"nodeType":"451","messageId":"452","endLine":20,"endColumn":43},{"ruleId":"449","severity":1,"message":"493","line":23,"column":10,"nodeType":"451","messageId":"452","endLine":23,"endColumn":15},{"ruleId":"449","severity":1,"message":"494","line":92,"column":9,"nodeType":"451","messageId":"452","endLine":92,"endColumn":24},{"ruleId":"449","severity":1,"message":"495","line":98,"column":9,"nodeType":"451","messageId":"452","endLine":98,"endColumn":24},{"ruleId":"449","severity":1,"message":"474","line":1,"column":17,"nodeType":"451","messageId":"452","endLine":1,"endColumn":26},{"ruleId":"449","severity":1,"message":"496","line":3,"column":10,"nodeType":"451","messageId":"452","endLine":3,"endColumn":27},{"ruleId":"449","severity":1,"message":"494","line":124,"column":9,"nodeType":"451","messageId":"452","endLine":124,"endColumn":24},{"ruleId":"449","severity":1,"message":"495","line":130,"column":9,"nodeType":"451","messageId":"452","endLine":130,"endColumn":24},{"ruleId":"449","severity":1,"message":"497","line":3,"column":18,"nodeType":"451","messageId":"452","endLine":3,"endColumn":33},{"ruleId":"449","severity":1,"message":"498","line":2,"column":3,"nodeType":"451","messageId":"452","endLine":2,"endColumn":9},{"ruleId":"449","severity":1,"message":"472","line":5,"column":3,"nodeType":"451","messageId":"452","endLine":5,"endColumn":19},{"ruleId":"449","severity":1,"message":"499","line":7,"column":3,"nodeType":"451","messageId":"452","endLine":7,"endColumn":14},{"ruleId":"449","severity":1,"message":"500","line":10,"column":3,"nodeType":"451","messageId":"452","endLine":10,"endColumn":16},{"ruleId":"449","severity":1,"message":"501","line":32,"column":27,"nodeType":"451","messageId":"452","endLine":32,"endColumn":31},{"ruleId":"454","severity":1,"message":"502","line":44,"column":6,"nodeType":"456","endLine":44,"endColumn":66,"suggestions":"503"},{"ruleId":"449","severity":1,"message":"472","line":4,"column":3,"nodeType":"451","messageId":"452","endLine":4,"endColumn":19},{"ruleId":"449","severity":1,"message":"473","line":6,"column":3,"nodeType":"451","messageId":"452","endLine":6,"endColumn":14},{"ruleId":"449","severity":1,"message":"504","line":17,"column":10,"nodeType":"451","messageId":"452","endLine":17,"endColumn":20},{"ruleId":"449","severity":1,"message":"505","line":17,"column":22,"nodeType":"451","messageId":"452","endLine":17,"endColumn":40},{"ruleId":"449","severity":1,"message":"506","line":19,"column":8,"nodeType":"451","messageId":"452","endLine":19,"endColumn":20},{"ruleId":"449","severity":1,"message":"507","line":20,"column":8,"nodeType":"451","messageId":"452","endLine":20,"endColumn":19},{"ruleId":"449","severity":1,"message":"508","line":21,"column":10,"nodeType":"451","messageId":"452","endLine":21,"endColumn":19},{"ruleId":"449","severity":1,"message":"509","line":3,"column":3,"nodeType":"451","messageId":"452","endLine":3,"endColumn":13},{"ruleId":"449","severity":1,"message":"510","line":4,"column":3,"nodeType":"451","messageId":"452","endLine":4,"endColumn":16},{"ruleId":"449","severity":1,"message":"511","line":5,"column":3,"nodeType":"451","messageId":"452","endLine":5,"endColumn":14},{"ruleId":"449","severity":1,"message":"512","line":6,"column":3,"nodeType":"451","messageId":"452","endLine":6,"endColumn":17},{"ruleId":"449","severity":1,"message":"513","line":11,"column":10,"nodeType":"451","messageId":"452","endLine":11,"endColumn":22},{"ruleId":"449","severity":1,"message":"514","line":11,"column":37,"nodeType":"451","messageId":"452","endLine":11,"endColumn":44},{"ruleId":"449","severity":1,"message":"498","line":2,"column":5,"nodeType":"451","messageId":"452","endLine":2,"endColumn":11},{"ruleId":"449","severity":1,"message":"472","line":5,"column":5,"nodeType":"451","messageId":"452","endLine":5,"endColumn":21},{"ruleId":"449","severity":1,"message":"499","line":7,"column":5,"nodeType":"451","messageId":"452","endLine":7,"endColumn":16},{"ruleId":"449","severity":1,"message":"500","line":10,"column":5,"nodeType":"451","messageId":"452","endLine":10,"endColumn":18},{"ruleId":"515","severity":1,"message":"516","line":30,"column":5,"nodeType":"517","messageId":"518","endLine":56,"endColumn":6},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","'reqUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["519"],"React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.",["520"],"'navigate' is assigned a value but never used.",["521"],["522"],"'Spinner' is defined but never used.","'FiUpload' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["523"],"'BiUser' is defined but never used.",["524"],"'ModalCloseButton' is defined but never used.","'ModalHeader' is defined but never used.","'useEffect' is defined but never used.","'uploadToCloudinary' is defined but never used.","'file' is assigned a value but never used.","'setInitialValues' is assigned a value but never used.",["525"],"React Hook useEffect has missing dependencies: 'formik' and 'initialValues'. Either include them or remove the dependency array.",["526"],["527"],"React Hook useEffect has missing dependencies: 'navigate', 'toast', and 'token'. Either include them or remove the dependency array.",["528"],"React Hook useEffect has missing dependencies: 'navigate' and 'toast'. Either include them or remove the dependency array.",["529"],"'currentUserStoryIndex' is assigned a value but never used.","'setCurrentUserStoryIndex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'handleNextStory'. Either include it or remove the dependency array.",["530"],"'IconButton' is defined but never used.","'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.","'files' is assigned a value but never used.","'handleNextMedia' is assigned a value but never used.","'handlePrevMedia' is assigned a value but never used.","'findStoryByUserId' is defined but never used.","'FiMessageSquare' is defined but never used.","'Button' is defined but never used.","'ModalFooter' is defined but never used.","'useDisclosure' is defined but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'jwt'. Either include them or remove the dependency array.",["531"],"'createPost' is defined but never used.","'findPostByIdAction' is defined but never used.","'CommentModal' is defined but never used.","'SpinnerCard' is defined but never used.","'useParams' is defined but never used.","'AiFillLike' is defined but never used.","'AiOutlineLike' is defined but never used.","'AiFillHeart' is defined but never used.","'AiOutlineHeart' is defined but never used.","'BsEmojiSmile' is defined but never used.","'BsReply' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"532","fix":"536"},{"desc":"537","fix":"538"},{"desc":"532","fix":"539"},{"desc":"540","fix":"541"},{"desc":"532","fix":"542"},{"desc":"543","fix":"544"},{"desc":"545","fix":"546"},{"desc":"547","fix":"548"},{"desc":"549","fix":"550"},{"desc":"551","fix":"552"},{"desc":"553","fix":"554"},"Update the dependencies array to be: [dispatch, token]",{"range":"555","text":"556"},"Update the dependencies array to be: [username, user.follower, user.following, token, dispatch]",{"range":"557","text":"558"},{"range":"559","text":"556"},"Update the dependencies array to be: [userIds, post.createdPost, post.deletedPost, post.updatedPost, token, dispatch]",{"range":"560","text":"561"},{"range":"562","text":"556"},"Update the dependencies array to be: [user, post.createdPost, token, dispatch]",{"range":"563","text":"564"},{"range":"565","text":"556"},"Update the dependencies array to be: [formik, initialValues, user.reqUser]",{"range":"566","text":"567"},"Update the dependencies array to be: [dispatch, signin, token]",{"range":"568","text":"569"},"Update the dependencies array to be: [navigate, toast, token, user.reqUser]",{"range":"570","text":"571"},"Update the dependencies array to be: [auth.signup, navigate, toast]",{"range":"572","text":"573"},"Update the dependencies array to be: [currentStoryIndex, handleNextStory]",{"range":"574","text":"575"},"Update the dependencies array to be: [postId, comments.createdComment, comments.deletedComment, dispatch, jwt]",{"range":"576","text":"577"},[1306,1313],"[dispatch, token]",[965,1006],"[username, user.follower, user.following, token, dispatch]",[1059,1066],[1528,1591],"[userIds, post.createdPost, post.deletedPost, post.updatedPost, token, dispatch]",[1027,1037],[1478,1502],"[user, post.createdPost, token, dispatch]",[1185,1192],[1463,1477],"[formik, initialValues, user.reqUser]",[1169,1184],"[dispatch, signin, token]",[1458,1472],"[navigate, toast, token, user.reqUser]",[1508,1521],"[auth.signup, navigate, toast]",[1442,1461],"[currentStoryIndex, handleNextStory]",[1516,1576],"[postId, comments.createdComment, comments.deletedComment, dispatch, jwt]"]